openapi: 3.0.3
info:
  title: ''
  description: ''
  version: 0.0.0
servers:
  -
    url: /
    description: ''
paths:
  /api/audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/api/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /api/change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/api/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /api/gateways:
    get:
      operationId: getGatewayCollection
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Gateway.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gateway-read'
      summary: 'Retrieves the collection of Gateway resources.'
      description: 'Retrieves the collection of Gateway resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[location]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[auth]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[locale]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[accept]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[jwt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[password]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[apikey]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[documentation]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: location
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'location[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: auth
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'auth[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: locale
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'locale[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: accept
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'accept[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: jwt
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jwt[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: username
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'username[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: password
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'password[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: apikey
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'apikey[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: documentation
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'documentation[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postGatewayCollection
      tags:
        - Gateway
      responses:
        201:
          description: 'Gateway resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
          links:
            GetGatewayItem:
              operationId: getGatewayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/gateways/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Gateway resource.'
      description: 'Creates a Gateway resource.'
      parameters: []
      requestBody:
        description: 'The new Gateway resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Gateway.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Gateway-write'
        required: true
      deprecated: false
    parameters: []
  '/api/gateways/{id}':
    get:
      operationId: getGatewayItem
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Gateway resource.'
      description: 'Retrieves a Gateway resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGatewayItem
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
          links:
            GetGatewayItem:
              operationId: getGatewayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/gateways/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Gateway resource.'
      description: 'Replaces the Gateway resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Gateway resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Gateway.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Gateway-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteGatewayItem
      tags:
        - Gateway
      responses:
        204:
          description: 'Gateway resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Gateway resource.'
      description: 'Removes the Gateway resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/gateways/{id}/audit_trail':
    get:
      operationId: get_audit_trailGatewayItem
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
        404:
          description: 'Resource not found'
      summary: Audittrail
      description: 'Gets the audit trail for this resource'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/gateways/{id}/change_log':
    get:
      operationId: get_change_logsGatewayItem
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
        404:
          description: 'Resource not found'
      summary: Changelogs
      description: 'Gets al the change logs for this resource'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/gateways/{name}/{endpoint}':
    get:
      operationId: gateway_getGatewayItem
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
        404:
          description: 'Resource not found'
      summary: 'Gateway GET calls'
      description: 'routes GET calls through gateway'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: gateway_putGatewayItem
      tags:
        - Gateway
      responses:
        200:
          description: 'Gateway resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
          links:
            GetGatewayItem:
              operationId: getGatewayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/gateways/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Gateway PUT calls'
      description: 'routes PUT calls through gateway'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Gateway resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Gateway.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Gateway-write'
        required: true
      deprecated: false
    post:
      operationId: gateway_postGatewayCollection
      tags:
        - Gateway
      responses:
        201:
          description: 'Gateway resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Gateway.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Gateway-read'
          links:
            GetGatewayItem:
              operationId: getGatewayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/gateways/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Gateway POST calls'
      description: 'routes POST calls through gateway'
      parameters: []
      requestBody:
        description: 'The new Gateway resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Gateway.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Gateway-write'
        required: true
      deprecated: false
    delete:
      operationId: gateway_deleteGatewayItem
      tags:
        - Gateway
      responses:
        204:
          description: 'Gateway resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Gateway DELETE calls'
      description: 'routes DELETE calls through gateway'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/gateways/wrc//adresses/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcResourceCategory
      operationId: get_audit_trailResourceCategoryItem
      summary: 'Retrieves a ResourceCategory resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ResourceCategory resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//adresses/{id}/change_log':
    get:
      tags:
        - GatewayWrcResourceCategory
      operationId: get_change_logsResourceCategoryItem
      summary: 'Retrieves a ResourceCategory resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ResourceCategory resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /gateways/wrc//applications:
    get:
      tags:
        - GatewayWrcApplication
      operationId: getApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[domain]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcApplication
      operationId: postApplicationCollection
      summary: 'Creates a Application resource.'
      responses:
        201:
          description: 'Application resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
          links:
            GetApplicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
        description: 'The new Application resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//applications/{id}':
    get:
      tags:
        - GatewayWrcApplication
      operationId: getApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcApplication
      operationId: putApplicationItem
      summary: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcApplication-write'
        description: 'The updated Application resource'
    delete:
      tags:
        - GatewayWrcApplication
      operationId: deleteApplicationItem
      summary: 'Removes the Application resource.'
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//applications/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcApplication
      operationId: get_audit_trailApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//applications/{id}/change_log':
    get:
      tags:
        - GatewayWrcApplication
      operationId: get_change_logsApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcApplication-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//applications/{id}/{slug}':
    get:
      tags:
        - GatewayWrcApplication
      operationId: get_page_on_slugApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[domain]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
  /gateways/wrc//audit_trails:
    get:
      tags:
        - GatewayWrcAuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcAuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//audit_trails/{id}':
    get:
      tags:
        - GatewayWrcAuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - GatewayWrcAuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
    put:
      tags:
        - GatewayWrcAuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - GatewayWrcAuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcAuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcAuditTrail-write'
        description: 'The updated AuditTrail resource'
  /gateways/wrc//categories:
    get:
      tags:
        - GatewayWrcCategory
      operationId: getCategoryCollection
      summary: 'Retrieves the collection of Category resources.'
      responses:
        200:
          description: 'Category collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Category:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Category:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[icon]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[lft]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[lvl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[rgt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: parent.id
          in: query
          required: false
          schema:
            type: string
        -
          name: parent.name
          in: query
          required: false
          schema:
            type: string
        -
          name: resources.resource
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcCategory
      operationId: postCategoryCollection
      summary: 'Creates a Category resource.'
      responses:
        201:
          description: 'Category resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
          links:
            GetCategoryItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCategoryItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /categories/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
        description: 'The new Category resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//categories/{id}':
    get:
      tags:
        - GatewayWrcCategory
      operationId: getCategoryItem
      summary: 'Retrieves a Category resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Category resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcCategory
      operationId: putCategoryItem
      summary: 'Replaces the Category resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Category resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcCategory-write'
        description: 'The updated Category resource'
    delete:
      tags:
        - GatewayWrcCategory
      operationId: deleteCategoryItem
      summary: 'Removes the Category resource.'
      responses:
        204:
          description: 'Category resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//categories/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcCategory
      operationId: get_audit_trailCategoryItem
      summary: 'Retrieves a Category resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Category resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//categories/{id}/change_log':
    get:
      tags:
        - GatewayWrcCategory
      operationId: get_change_logsCategoryItem
      summary: 'Retrieves a Category resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Category resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcCategory-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /gateways/wrc//change_logs:
    get:
      tags:
        - GatewayWrcChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//change_logs/{id}':
    get:
      tags:
        - GatewayWrcChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - GatewayWrcChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
    put:
      tags:
        - GatewayWrcChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - GatewayWrcChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcChangeLog-write'
        description: 'The updated ChangeLog resource'
  /gateways/wrc//configurations:
    get:
      tags:
        - GatewayWrcConfiguration
      operationId: getConfigurationCollection
      summary: 'Retrieves the collection of Configuration resources.'
      responses:
        200:
          description: 'Configuration collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Configuration:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Configuration:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[configuration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcConfiguration
      operationId: postConfigurationCollection
      summary: 'Creates a Configuration resource.'
      responses:
        201:
          description: 'Configuration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
          links:
            GetConfigurationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getConfigurationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /configurations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
        description: 'The new Configuration resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//configurations/{id}':
    get:
      tags:
        - GatewayWrcConfiguration
      operationId: getConfigurationItem
      summary: 'Retrieves a Configuration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Configuration resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcConfiguration
      operationId: putConfigurationItem
      summary: 'Replaces the Configuration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Configuration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcConfiguration-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcConfiguration-write'
        description: 'The updated Configuration resource'
    delete:
      tags:
        - GatewayWrcConfiguration
      operationId: deleteConfigurationItem
      summary: 'Removes the Configuration resource.'
      responses:
        204:
          description: 'Configuration resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  /gateways/wrc//documents:
    get:
      tags:
        - GatewayWrcDocument
      operationId: getDocumentCollection
      summary: 'Retrieves the collection of Document resources.'
      responses:
        200:
          description: 'Document collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[base64]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcDocument
      operationId: postDocumentCollection
      summary: 'Creates a Document resource.'
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
          links:
            GetDocumentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDocumentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
        description: 'The new Document resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//documents/{id}':
    get:
      tags:
        - GatewayWrcDocument
      operationId: getDocumentItem
      summary: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Document resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcDocument
      operationId: putDocumentItem
      summary: 'Replaces the Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcDocument-write'
        description: 'The updated Document resource'
    delete:
      tags:
        - GatewayWrcDocument
      operationId: deleteDocumentItem
      summary: 'Removes the Document resource.'
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//documents/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcDocument
      operationId: get_audit_trailDocumentItem
      summary: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Document resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//documents/{id}/change_log':
    get:
      tags:
        - GatewayWrcDocument
      operationId: get_change_logsDocumentItem
      summary: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Document resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcDocument-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /gateways/wrc//images:
    get:
      tags:
        - GatewayWrcImage
      operationId: getImageCollection
      summary: 'Retrieves the collection of Image resources.'
      responses:
        200:
          description: 'Image collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Image:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Image:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[alt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[href]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[base64]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcImage
      operationId: postImageCollection
      summary: 'Creates a Image resource.'
      responses:
        201:
          description: 'Image resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
          links:
            GetImageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getImageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /images/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
        description: 'The new Image resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//images/{id}':
    get:
      tags:
        - GatewayWrcImage
      operationId: getImageItem
      summary: 'Retrieves a Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Image resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcImage
      operationId: putImageItem
      summary: 'Replaces the Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Image resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcImage-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcImage-write'
        description: 'The updated Image resource'
    delete:
      tags:
        - GatewayWrcImage
      operationId: deleteImageItem
      summary: 'Removes the Image resource.'
      responses:
        204:
          description: 'Image resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  /gateways/wrc//menu_items:
    get:
      tags:
        - GatewayWrcMenuItem
      operationId: getMenuItemCollection
      summary: 'Retrieves the collection of MenuItem resources.'
      responses:
        200:
          description: 'MenuItem collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/MenuItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/MenuItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[order]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[icon]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[href]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: menu.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'menu.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcMenuItem
      operationId: postMenuItemCollection
      summary: 'Creates a MenuItem resource.'
      responses:
        201:
          description: 'MenuItem resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
          links:
            GetMenuItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMenuItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /menu_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
        description: 'The new MenuItem resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//menu_items/{id}':
    get:
      tags:
        - GatewayWrcMenuItem
      operationId: getMenuItemItem
      summary: 'Retrieves a MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'MenuItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcMenuItem
      operationId: putMenuItemItem
      summary: 'Replaces the MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'MenuItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenuItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenuItem-write'
        description: 'The updated MenuItem resource'
    delete:
      tags:
        - GatewayWrcMenuItem
      operationId: deleteMenuItemItem
      summary: 'Removes the MenuItem resource.'
      responses:
        204:
          description: 'MenuItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  /gateways/wrc//menus:
    get:
      tags:
        - GatewayWrcMenu
      operationId: getMenuCollection
      summary: 'Retrieves the collection of Menu resources.'
      responses:
        200:
          description: 'Menu collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Menu:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Menu:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcMenu
      operationId: postMenuCollection
      summary: 'Creates a Menu resource.'
      responses:
        201:
          description: 'Menu resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
          links:
            GetMenuItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMenuItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /menus/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
        description: 'The new Menu resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//menus/{id}':
    get:
      tags:
        - GatewayWrcMenu
      operationId: getMenuItem
      summary: 'Retrieves a Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Menu resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcMenu
      operationId: putMenuItem
      summary: 'Replaces the Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Menu resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcMenu-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcMenu-write'
        description: 'The updated Menu resource'
    delete:
      tags:
        - GatewayWrcMenu
      operationId: deleteMenuItem
      summary: 'Removes the Menu resource.'
      responses:
        204:
          description: 'Menu resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  /gateways/wrc//organizations:
    get:
      tags:
        - GatewayWrcOrganization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[rsin]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[chamberOfComerce]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[technicalContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[privacyContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[administrationContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcOrganization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//organizations/{id}':
    get:
      tags:
        - GatewayWrcOrganization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcOrganization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcOrganization-write'
        description: 'The updated Organization resource'
    delete:
      tags:
        - GatewayWrcOrganization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//organizations/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcOrganization
      operationId: get_audit_trailOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//organizations/{id}/change_log':
    get:
      tags:
        - GatewayWrcOrganization
      operationId: get_change_logsOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcOrganization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /gateways/wrc//resource_categories:
    get:
      tags:
        - GatewayWrcResourceCategory
      operationId: getResourceCategoryCollection
      summary: 'Retrieves the collection of ResourceCategory resources.'
      responses:
        200:
          description: 'ResourceCategory collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ResourceCategory:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ResourceCategory:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceCategory-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: categories.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'categories.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: categories.name
          in: query
          required: false
          schema:
            type: string
        -
          name: categories.organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: categories.parent.id
          in: query
          required: false
          schema:
            type: string
        -
          name: categories.parent.name
          in: query
          required: false
          schema:
            type: string
        -
          name: categories.resources.resource
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcResourceCategory
      operationId: postResourceCategoryCollection
      summary: 'Creates a ResourceCategory resource.'
      responses:
        201:
          description: 'ResourceCategory resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
          links:
            GetResourceCategoryItem:
              parameters:
                id: '$response.body#/id'
              operationId: getResourceCategoryItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /resource_categories/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
        description: 'The new ResourceCategory resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//resource_categories/{id}':
    get:
      tags:
        - GatewayWrcResourceCategory
      operationId: getResourceCategoryItem
      summary: 'Retrieves a ResourceCategory resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ResourceCategory resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcResourceCategory
      operationId: putResourceCategoryItem
      summary: 'Replaces the ResourceCategory resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'ResourceCategory resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcResourceCategory-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcResourceCategory-write'
        description: 'The updated ResourceCategory resource'
    delete:
      tags:
        - GatewayWrcResourceCategory
      operationId: deleteResourceCategoryItem
      summary: 'Removes the ResourceCategory resource.'
      responses:
        204:
          description: 'ResourceCategory resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  /gateways/wrc//slugs:
    get:
      tags:
        - GatewayWrcSlug
      operationId: getSlugCollection
      summary: 'Retrieves the collection of Slug resources.'
      responses:
        200:
          description: 'Slug collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Slug:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Slug:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[slug]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: template.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'template.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slug
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slug[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcSlug
      operationId: postSlugCollection
      summary: 'Creates a Slug resource.'
      responses:
        201:
          description: 'Slug resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
          links:
            GetSlugItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSlugItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /slugs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
        description: 'The new Slug resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//slugs/{id}':
    get:
      tags:
        - GatewayWrcSlug
      operationId: getSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcSlug
      operationId: putSlugItem
      summary: 'Replaces the Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Slug resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcSlug-write'
        description: 'The updated Slug resource'
    delete:
      tags:
        - GatewayWrcSlug
      operationId: deleteSlugItem
      summary: 'Removes the Slug resource.'
      responses:
        204:
          description: 'Slug resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//slugs/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcSlug
      operationId: get_audit_trailSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//slugs/{id}/change_log':
    get:
      tags:
        - GatewayWrcSlug
      operationId: get_change_logsSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcSlug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /gateways/wrc//styles:
    get:
      tags:
        - GatewayWrcStyle
      operationId: getStyleCollection
      summary: 'Retrieves the collection of Style resources.'
      responses:
        200:
          description: 'Style collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Style:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Style:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[css]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: css
          in: query
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcStyle
      operationId: postStyleCollection
      summary: 'Creates a Style resource.'
      responses:
        201:
          description: 'Style resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
          links:
            GetStyleItem:
              parameters:
                id: '$response.body#/id'
              operationId: getStyleItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /styles/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
        description: 'The new Style resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//styles/{id}':
    get:
      tags:
        - GatewayWrcStyle
      operationId: getStyleItem
      summary: 'Retrieves a Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Style resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcStyle
      operationId: putStyleItem
      summary: 'Replaces the Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Style resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcStyle-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcStyle-write'
        description: 'The updated Style resource'
    delete:
      tags:
        - GatewayWrcStyle
      operationId: deleteStyleItem
      summary: 'Removes the Style resource.'
      responses:
        204:
          description: 'Style resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  /gateways/wrc//template_groups:
    get:
      tags:
        - GatewayWrcTemplateGroup
      operationId: getTemplateGroupCollection
      summary: 'Retrieves the collection of TemplateGroup resources.'
      responses:
        200:
          description: 'TemplateGroup collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TemplateGroup:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TemplateGroup:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcTemplateGroup
      operationId: postTemplateGroupCollection
      summary: 'Creates a TemplateGroup resource.'
      responses:
        201:
          description: 'TemplateGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
          links:
            GetTemplateGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /template_groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
        description: 'The new TemplateGroup resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//template_groups/{id}':
    get:
      tags:
        - GatewayWrcTemplateGroup
      operationId: getTemplateGroupItem
      summary: 'Retrieves a TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'TemplateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcTemplateGroup
      operationId: putTemplateGroupItem
      summary: 'Replaces the TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'TemplateGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplateGroup-write'
        description: 'The updated TemplateGroup resource'
    delete:
      tags:
        - GatewayWrcTemplateGroup
      operationId: deleteTemplateGroupItem
      summary: 'Removes the TemplateGroup resource.'
      responses:
        204:
          description: 'TemplateGroup resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//template_groups/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcTemplateGroup
      operationId: get_audit_trailTemplateGroupItem
      summary: 'Retrieves a TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'TemplateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//template_groups/{id}/change_log':
    get:
      tags:
        - GatewayWrcTemplateGroup
      operationId: get_change_logsTemplateGroupItem
      summary: 'Retrieves a TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'TemplateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /gateways/wrc//templates:
    get:
      tags:
        - GatewayWrcTemplate
      operationId: getTemplateCollection
      summary: 'Retrieves the collection of Template resources.'
      responses:
        200:
          description: 'Template collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Template:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Template:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[title]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[templateEngine]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slugs.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slugs.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: templateEngine
          in: query
          required: false
          schema:
            type: string
        -
          name: 'templateEngine[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slugs.slug
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slugs.slug[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: title
          in: query
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: templateGroups.name
          in: query
          required: false
          schema:
            type: string
        -
          name: templateGroups.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'templateGroups.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      produces:
        - application/health+json
    post:
      tags:
        - GatewayWrcTemplate
      operationId: postTemplateCollection
      summary: 'Creates a Template resource.'
      responses:
        201:
          description: 'Template resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
          links:
            GetTemplateItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /templates/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
        description: 'The new Template resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//templates/{id}':
    get:
      tags:
        - GatewayWrcTemplate
      operationId: getTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Template resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - GatewayWrcTemplate
      operationId: putTemplateItem
      summary: 'Replaces the Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Template resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
        description: 'The updated Template resource'
    delete:
      tags:
        - GatewayWrcTemplate
      operationId: deleteTemplateItem
      summary: 'Removes the Template resource.'
      responses:
        204:
          description: 'Template resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
  '/gateways/wrc//templates/{id}/audit_trail':
    get:
      tags:
        - GatewayWrcTemplate
      operationId: get_audit_trailTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Template resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//templates/{id}/change_log':
    get:
      tags:
        - GatewayWrcTemplate
      operationId: get_change_logsTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        200:
          description: 'Template resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/gateways/wrc//templates/{id}/render':
    post:
      tags:
        - GatewayWrcTemplate
      operationId: render_templateTemplateItem
      summary: 'Creates a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Prefer
          description: 'Prefer header'
          in: header
      responses:
        201:
          description: 'Template resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/pdf:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.ms-word:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
            application/vnd.openxmlformats-officedocument.wordprocessing:
              schema:
                $ref: '#/components/schemas/GatewayWrcTemplate-read'
          links:
            GetTemplateItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /templates/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/pdf:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/vnd.ms-word:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
          application/vnd.openxmlformats-officedocument.wordprocessing:
            schema:
              $ref: '#/components/schemas/GatewayWrcTemplate-write'
        description: 'The new Template resource'
components:
  schemas:
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Gateway-read:
      type: object
      description: 'This entity holds the information about a common ground gateway'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          type: string
          example: arc
          description: 'The Name of the Gateway which is used in the commonGround service'
        location:
          maxLength: 255
          type: string
          example: 'https://test.nl/api/v1/arc'
          description: 'The location where the Gateway needs to be accessed'
        auth:
          maxLength: 255
          type: string
          enum:
            - apikey
            - jwt
            - username-password
          example: apikey
          description: 'The method used for authentication to the Gateway'
        locale:
          maxLength: 10
          type: string
          example: nl
          description: 'The Locale of the Gateway'
          nullable: true
        accept:
          maxLength: 255
          type: string
          example: application/json
          description: 'The accept header used for the Gateway'
          nullable: true
        jwt:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          description: 'The JWT used for authentication to the Gateway'
          nullable: true
        username:
          maxLength: 255
          type: string
          example: username@email.nl
          description: 'The username used for authentication to the Gateway'
          nullable: true
        password:
          maxLength: 255
          type: string
          example: password
          description: 'The password used for authentication to the Gateway'
          nullable: true
        apikey:
          maxLength: 255
          type: string
          example: 66505f8c-a80e-4bad-8678-d48ace4fbe4b
          description: 'The api key used for authentication to the Gateway'
          nullable: true
        documentation:
          type: string
          example: 'https://documentation.nl'
          description: 'The documentation url for this gateway'
          externalDocs:
            url: 'http://schema.org/url'
          nullable: true
      required:
        - name
        - location
        - auth
    Gateway-write:
      type: object
      description: 'This entity holds the information about a common ground gateway'
      required:
        - name
        - location
        - auth
      properties:
        name:
          maxLength: 255
          type: string
          example: arc
          description: 'The Name of the Gateway which is used in the commonGround service'
        location:
          maxLength: 255
          type: string
          example: 'https://test.nl/api/v1/arc'
          description: 'The location where the Gateway needs to be accessed'
        auth:
          maxLength: 255
          type: string
          enum:
            - apikey
            - jwt
            - username-password
          example: apikey
          description: 'The method used for authentication to the Gateway'
        locale:
          maxLength: 10
          type: string
          example: nl
          description: 'The Locale of the Gateway'
          nullable: true
        accept:
          maxLength: 255
          type: string
          example: application/json
          description: 'The accept header used for the Gateway'
          nullable: true
        jwt:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          description: 'The JWT used for authentication to the Gateway'
          nullable: true
        username:
          maxLength: 255
          type: string
          example: username@email.nl
          description: 'The username used for authentication to the Gateway'
          nullable: true
        password:
          maxLength: 255
          type: string
          example: password
          description: 'The password used for authentication to the Gateway'
          nullable: true
        apikey:
          maxLength: 255
          type: string
          example: 66505f8c-a80e-4bad-8678-d48ace4fbe4b
          description: 'The api key used for authentication to the Gateway'
          nullable: true
        documentation:
          type: string
          example: 'https://documentation.nl'
          description: 'The documentation url for this gateway'
          externalDocs:
            url: 'http://schema.org/url'
          nullable: true
    Gateway.jsonld-read:
      type: object
      description: 'This entity holds the information about a common ground gateway'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          type: string
          example: arc
          description: 'The Name of the Gateway which is used in the commonGround service'
        location:
          maxLength: 255
          type: string
          example: 'https://test.nl/api/v1/arc'
          description: 'The location where the Gateway needs to be accessed'
        auth:
          maxLength: 255
          type: string
          enum:
            - apikey
            - jwt
            - username-password
          example: apikey
          description: 'The method used for authentication to the Gateway'
        locale:
          maxLength: 10
          type: string
          example: nl
          description: 'The Locale of the Gateway'
          nullable: true
        accept:
          maxLength: 255
          type: string
          example: application/json
          description: 'The accept header used for the Gateway'
          nullable: true
        jwt:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          description: 'The JWT used for authentication to the Gateway'
          nullable: true
        username:
          maxLength: 255
          type: string
          example: username@email.nl
          description: 'The username used for authentication to the Gateway'
          nullable: true
        password:
          maxLength: 255
          type: string
          example: password
          description: 'The password used for authentication to the Gateway'
          nullable: true
        apikey:
          maxLength: 255
          type: string
          example: 66505f8c-a80e-4bad-8678-d48ace4fbe4b
          description: 'The api key used for authentication to the Gateway'
          nullable: true
        documentation:
          type: string
          example: 'https://documentation.nl'
          description: 'The documentation url for this gateway'
          externalDocs:
            url: 'http://schema.org/url'
          nullable: true
      required:
        - name
        - location
        - auth
    Gateway.jsonld-write:
      type: object
      description: 'This entity holds the information about a common ground gateway'
      required:
        - name
        - location
        - auth
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
          example: arc
          description: 'The Name of the Gateway which is used in the commonGround service'
        location:
          maxLength: 255
          type: string
          example: 'https://test.nl/api/v1/arc'
          description: 'The location where the Gateway needs to be accessed'
        auth:
          maxLength: 255
          type: string
          enum:
            - apikey
            - jwt
            - username-password
          example: apikey
          description: 'The method used for authentication to the Gateway'
        locale:
          maxLength: 10
          type: string
          example: nl
          description: 'The Locale of the Gateway'
          nullable: true
        accept:
          maxLength: 255
          type: string
          example: application/json
          description: 'The accept header used for the Gateway'
          nullable: true
        jwt:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          description: 'The JWT used for authentication to the Gateway'
          nullable: true
        username:
          maxLength: 255
          type: string
          example: username@email.nl
          description: 'The username used for authentication to the Gateway'
          nullable: true
        password:
          maxLength: 255
          type: string
          example: password
          description: 'The password used for authentication to the Gateway'
          nullable: true
        apikey:
          maxLength: 255
          type: string
          example: 66505f8c-a80e-4bad-8678-d48ace4fbe4b
          description: 'The api key used for authentication to the Gateway'
          nullable: true
        documentation:
          type: string
          example: 'https://documentation.nl'
          description: 'The documentation url for this gateway'
          externalDocs:
            url: 'http://schema.org/url'
          nullable: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
  Application-read:
    type: object
    description: 'Application is the project of a website.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      domain:
        description: 'The domain of this application.'
        type: string
      organization:
        $ref: '#/components/schemas/Organization-read'
      defaultConfiguration:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Configuration-read'
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Style-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - description
      - domain
      - organization
  Application-write:
    type: object
    description: 'Application is the project of a website.'
    required:
      - name
      - description
      - domain
      - organization
    properties:
      name:
        description: 'The name of this application.'
        type: string
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      domain:
        description: 'The domain of this application.'
        type: string
      organization:
        $ref: '#/components/schemas/Organization-write'
      defaultConfiguration:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Configuration-write'
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Style-write'
  'Application:jsonld-read':
    type: object
    description: 'Application is the project of a website.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      domain:
        description: 'The domain of this application.'
        type: string
      organization:
        $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      defaultConfiguration:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ConfigurationGatewayWrc:jsonld-read'
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/StyleGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - description
      - domain
      - organization
  'Application:jsonld-write':
    type: object
    description: 'Application is the project of a website.'
    required:
      - name
      - description
      - domain
      - organization
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this application.'
        type: string
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      domain:
        description: 'The domain of this application.'
        type: string
      organization:
        $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      defaultConfiguration:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ConfigurationGatewayWrc:jsonld-write'
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/StyleGatewayWrc:jsonld-write'
  AuditTrail-read:
    type: object
    description: 'An resource representing a log line.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this object'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      application:
        writeOnly: true
        description: 'The application that made the request'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      request:
        description: 'The id of the request within that application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      user:
        description: 'The user on behalf of wich the request was made'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      subject:
        description: '???'
        type: string
        nullable: true
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        nullable: true
      dataElements:
        description: 'The moment this request was created'
        type: array
        items:
          type: string
        nullable: true
      dataSubjects:
        description: 'The moment this request was created'
        type: array
        items:
          type: string
        nullable: true
      resource:
        description: 'The resource that was requested'
        type: string
        nullable: true
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        nullable: true
      route:
        description: 'The moment this request was created'
        type: string
        nullable: true
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        nullable: true
      method:
        description: 'The method that was used'
        type: string
        nullable: true
      accept:
        description: 'The contentType that was reqousted'
        type: string
        nullable: true
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        nullable: true
      content:
        description: 'The moment this request was created'
        type: string
        nullable: true
      ip:
        description: 'The moment this request was created'
        type: string
        nullable: true
      session:
        description: 'The moment this request was created'
        type: string
      headers:
        description: 'The headers supplied by client'
        type: array
        items:
          type: string
      statusCode:
        description: 'The status code returned to client'
        type: integer
        nullable: true
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: boolean
        nullable: true
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: boolean
        nullable: true
      ok:
        description: 'Whether or not there where any problems'
        type: boolean
        nullable: true
      dateCreated:
        description: 'The moment this request was created'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
  AuditTrail-write:
    type: object
    description: 'An resource representing a log line.'
  'AuditTrail:jsonld-read':
    type: object
    description: 'An resource representing a log line.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this object'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      application:
        writeOnly: true
        description: 'The application that made the request'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      request:
        description: 'The id of the request within that application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      user:
        description: 'The user on behalf of wich the request was made'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      subject:
        description: '???'
        type: string
        nullable: true
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        nullable: true
      dataElements:
        description: 'The moment this request was created'
        type: array
        items:
          type: string
        nullable: true
      dataSubjects:
        description: 'The moment this request was created'
        type: array
        items:
          type: string
        nullable: true
      resource:
        description: 'The resource that was requested'
        type: string
        nullable: true
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        nullable: true
      route:
        description: 'The moment this request was created'
        type: string
        nullable: true
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        nullable: true
      method:
        description: 'The method that was used'
        type: string
        nullable: true
      accept:
        description: 'The contentType that was reqousted'
        type: string
        nullable: true
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        nullable: true
      content:
        description: 'The moment this request was created'
        type: string
        nullable: true
      ip:
        description: 'The moment this request was created'
        type: string
        nullable: true
      session:
        description: 'The moment this request was created'
        type: string
      headers:
        description: 'The headers supplied by client'
        type: array
        items:
          type: string
      statusCode:
        description: 'The status code returned to client'
        type: integer
        nullable: true
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: boolean
        nullable: true
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: boolean
        nullable: true
      ok:
        description: 'Whether or not there where any problems'
        type: boolean
        nullable: true
      dateCreated:
        description: 'The moment this request was created'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
  'AuditTrail:jsonld-write':
    type: object
    description: 'An resource representing a log line.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
  Category-read:
    type: object
    description: 'An category.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this organization.'
        type: string
      icon:
        description: 'The (e.g. font awsome) icon for this group.'
        type: string
        nullable: true
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-read'
      root:
        readOnly: true
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Category-read'
      parent:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Category-read'
      resources:
        type: array
        items:
          $ref: '#/components/schemas/ResourceCategory-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - icon
  Category-write:
    type: object
    description: 'An category.'
    required:
      - name
      - icon
    properties:
      name:
        description: 'The name of this organization.'
        type: string
      icon:
        description: 'The (e.g. font awsome) icon for this group.'
        type: string
        nullable: true
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-write'
      parent:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Category-write'
      resources:
        type: array
        items:
          $ref: '#/components/schemas/ResourceCategory-write'
  'Category:jsonld-read':
    type: object
    description: 'An category.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this organization.'
        type: string
      icon:
        description: 'The (e.g. font awsome) icon for this group.'
        type: string
        nullable: true
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      root:
        readOnly: true
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/CategoryGatewayWrc:jsonld-read'
      parent:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/CategoryGatewayWrc:jsonld-read'
      resources:
        type: array
        items:
          $ref: '#/components/schemas/ResourceCategoryGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - icon
  'Category:jsonld-write':
    type: object
    description: 'An category.'
    required:
      - name
      - icon
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this organization.'
        type: string
      icon:
        description: 'The (e.g. font awsome) icon for this group.'
        type: string
        nullable: true
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      parent:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/CategoryGatewayWrc:jsonld-write'
      resources:
        type: array
        items:
          $ref: '#/components/schemas/ResourceCategoryGatewayWrc:jsonld-write'
  ChangeLog-read:
    type: object
    description: 'An resource representing a log line.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this object'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      action:
        type: string
      objectId:
        type: string
        nullable: true
      objectClass:
        type: string
      version:
        type: integer
      data:
        type: array
        items:
          type: string
        nullable: true
      username:
        type: string
        nullable: true
      session:
        description: 'The moment this request was created'
        type: string
        nullable: true
      dateCreated:
        description: 'The moment this request was created'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
  ChangeLog-write:
    type: object
    description: 'An resource representing a log line.'
  'ChangeLog:jsonld-read':
    type: object
    description: 'An resource representing a log line.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this object'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      action:
        type: string
      objectId:
        type: string
        nullable: true
      objectClass:
        type: string
      version:
        type: integer
      data:
        type: array
        items:
          type: string
        nullable: true
      username:
        type: string
        nullable: true
      session:
        description: 'The moment this request was created'
        type: string
        nullable: true
      dateCreated:
        description: 'The moment this request was created'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        externalDocs:
          url: 'http://schema.org/DateTime'
        type: string
        format: date-time
        nullable: true
  'ChangeLog:jsonld-write':
    type: object
    description: 'An resource representing a log line.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
  Configuration-read:
    type: object
    description: 'Configurations hold a specific organisation configruation for an application.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
        nullable: true
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Application-read'
      configuration:
        description: 'array of configurations that will be provided to the application'
        type: array
        items:
          type: string
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
  Configuration-write:
    type: object
    description: 'Configurations hold a specific organisation configruation for an application.'
    properties:
      name:
        description: 'The name of this application.'
        type: string
        nullable: true
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Application-write'
      organization:
        $ref: '#/components/schemas/Organization-write'
      configuration:
        description: 'array of configurations that will be provided to the application'
        type: array
        items:
          type: string
    required:
      - organization
  'Configuration:jsonld-read':
    type: object
    description: 'Configurations hold a specific organisation configruation for an application.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
        nullable: true
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-read'
      configuration:
        description: 'array of configurations that will be provided to the application'
        type: array
        items:
          type: string
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
  'Configuration:jsonld-write':
    type: object
    description: 'Configurations hold a specific organisation configruation for an application.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this application.'
        type: string
        nullable: true
      description:
        description: 'The description of this application.'
        type: string
        nullable: true
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-write'
      organization:
        $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      configuration:
        description: 'array of configurations that will be provided to the application'
        type: array
        items:
          type: string
    required:
      - organization
  Document-read:
    type: object
    description: 'Documents hold a document encoded in base64.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this document'
        type: string
      description:
        description: 'The description of this document.'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-read'
      contact:
        description: 'The contact of this document'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
  Document-write:
    type: object
    description: 'Documents hold a document encoded in base64.'
    required:
      - name
    properties:
      name:
        description: 'The internal name of this document'
        type: string
      description:
        description: 'The description of this document.'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-write'
      contact:
        description: 'The contact of this document'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
  'Document:jsonld-read':
    type: object
    description: 'Documents hold a document encoded in base64.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this document'
        type: string
      description:
        description: 'The description of this document.'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      contact:
        description: 'The contact of this document'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
  'Document:jsonld-write':
    type: object
    description: 'Documents hold a document encoded in base64.'
    required:
      - name
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The internal name of this document'
        type: string
      description:
        description: 'The description of this document.'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      contact:
        description: 'The contact of this document'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
  Image-read:
    type: object
    description: 'Image speaks for itself.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this image'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
      alt:
        description: 'The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader)'
        type: string
        nullable: true
      href:
        description: 'The href of this image'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
        nullable: true
      resource:
        description: 'The resource this image is connected to.'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - description
  Image-write:
    type: object
    description: 'Image speaks for itself.'
    required:
      - name
      - description
    properties:
      name:
        description: 'The name of this image'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
      alt:
        description: 'The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader)'
        type: string
        nullable: true
      href:
        description: 'The href of this image'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
        nullable: true
      resource:
        description: 'The resource this image is connected to.'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-write'
  'Image:jsonld-read':
    type: object
    description: 'Image speaks for itself.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this image'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
      alt:
        description: 'The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader)'
        type: string
        nullable: true
      href:
        description: 'The href of this image'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
        nullable: true
      resource:
        description: 'The resource this image is connected to.'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - description
  'Image:jsonld-write':
    type: object
    description: 'Image speaks for itself.'
    required:
      - name
      - description
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this image'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
      alt:
        description: 'The alt attribute provides alternative information for an image if a user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader)'
        type: string
        nullable: true
      href:
        description: 'The href of this image'
        type: string
        nullable: true
      base64:
        description: 'the base64 version of the image'
        type: string
        nullable: true
      resource:
        description: 'The resource this image is connected to.'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
  Menu-read:
    type: object
    description: 'Menu is your way of navigation inside your application.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this menu'
        type: string
      description:
        description: 'The description of this menuItems'
        type: string
        nullable: true
      menuItems:
        type: array
        items:
          $ref: '#/components/schemas/MenuItem-read'
      application:
        $ref: '#/components/schemas/Application-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - application
  Menu-write:
    type: object
    description: 'Menu is your way of navigation inside your application.'
    required:
      - name
      - application
    properties:
      name:
        description: 'The name of this menu'
        type: string
      description:
        description: 'The description of this menuItems'
        type: string
        nullable: true
      menuItems:
        type: array
        items:
          $ref: '#/components/schemas/MenuItem-write'
      application:
        $ref: '#/components/schemas/Application-write'
  'Menu:jsonld-read':
    type: object
    description: 'Menu is your way of navigation inside your application.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this menu'
        type: string
      description:
        description: 'The description of this menuItems'
        type: string
        nullable: true
      menuItems:
        type: array
        items:
          $ref: '#/components/schemas/MenuItemGatewayWrc:jsonld-read'
      application:
        $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - application
  'Menu:jsonld-write':
    type: object
    description: 'Menu is your way of navigation inside your application.'
    required:
      - name
      - application
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this menu'
        type: string
      description:
        description: 'The description of this menuItems'
        type: string
        nullable: true
      menuItems:
        type: array
        items:
          $ref: '#/components/schemas/MenuItemGatewayWrc:jsonld-write'
      application:
        $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-write'
  MenuItem-read:
    type: object
    description: 'MenuItem is a part of a menu and can be a link or submenu.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this MenuItem'
        type: string
      description:
        description: 'The description of this MenuItem'
        type: string
        nullable: true
      order:
        description: 'The order in which this menu item is shown in relation to other items of the same menu'
        type: integer
        nullable: true
      icon:
        description: 'the icon to display with this menu item'
        type: string
        nullable: true
      type:
        description: 'the type of the menu item'
        type: string
        nullable: true
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - href
  MenuItem-write:
    type: object
    description: 'MenuItem is a part of a menu and can be a link or submenu.'
    required:
      - name
      - href
      - menu
    properties:
      name:
        description: 'The name of this MenuItem'
        type: string
      description:
        description: 'The description of this MenuItem'
        type: string
        nullable: true
      order:
        description: 'The order in which this menu item is shown in relation to other items of the same menu'
        type: integer
        nullable: true
      icon:
        description: 'the icon to display with this menu item'
        type: string
        nullable: true
      type:
        description: 'the type of the menu item'
        type: string
        nullable: true
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
      menu:
        $ref: '#/components/schemas/Menu-write'
  'MenuItem:jsonld-read':
    type: object
    description: 'MenuItem is a part of a menu and can be a link or submenu.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this MenuItem'
        type: string
      description:
        description: 'The description of this MenuItem'
        type: string
        nullable: true
      order:
        description: 'The order in which this menu item is shown in relation to other items of the same menu'
        type: integer
        nullable: true
      icon:
        description: 'the icon to display with this menu item'
        type: string
        nullable: true
      type:
        description: 'the type of the menu item'
        type: string
        nullable: true
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - href
  'MenuItem:jsonld-write':
    type: object
    description: 'MenuItem is a part of a menu and can be a link or submenu.'
    required:
      - name
      - href
      - menu
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this MenuItem'
        type: string
      description:
        description: 'The description of this MenuItem'
        type: string
        nullable: true
      order:
        description: 'The order in which this menu item is shown in relation to other items of the same menu'
        type: integer
        nullable: true
      icon:
        description: 'the icon to display with this menu item'
        type: string
        nullable: true
      type:
        description: 'the type of the menu item'
        type: string
        nullable: true
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
      menu:
        $ref: '#/components/schemas/MenuGatewayWrc:jsonld-write'
  Organization-read:
    type: object
    description: 'An organization as active on commonground.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        nullable: true
      chamberOfComerce:
        description: 'The Chamber of Comerce ID of this organisations.'
        type: string
        nullable: true
      name:
        description: 'The name of this organization.'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      technicalContact:
        description: 'The technicalContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      privacyContact:
        description: 'The privacyContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      administrationContact:
        description: 'The administrationContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Style-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
      contact:
        description: 'The contact information for this organization'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      parentOrganization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-read'
      childOrganizations:
        type: array
        items:
          $ref: '#/components/schemas/Organization-read'
      termsAndConditions:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Template-read'
      privacyPolicy:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Template-read'
    required:
      - name
  Organization-write:
    type: object
    description: 'An organization as active on commonground.'
    properties:
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        nullable: true
      chamberOfComerce:
        description: 'The Chamber of Comerce ID of this organisations.'
        type: string
        nullable: true
      name:
        description: 'The name of this organization.'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      technicalContact:
        description: 'The technicalContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      privacyContact:
        description: 'The privacyContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      administrationContact:
        description: 'The administrationContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Style-write'
      contact:
        description: 'The contact information for this organization'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      parentOrganization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-write'
      termsAndConditions:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Template-write'
      privacyPolicy:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Template-write'
    required:
      - name
  'Organization:jsonld-read':
    type: object
    description: 'An organization as active on commonground.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        nullable: true
      chamberOfComerce:
        description: 'The Chamber of Comerce ID of this organisations.'
        type: string
        nullable: true
      name:
        description: 'The name of this organization.'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      technicalContact:
        description: 'The technicalContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      privacyContact:
        description: 'The privacyContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      administrationContact:
        description: 'The administrationContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/StyleGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
      contact:
        description: 'The contact information for this organization'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      parentOrganization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      childOrganizations:
        type: array
        items:
          $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      termsAndConditions:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-read'
      privacyPolicy:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-read'
    required:
      - name
  'Organization:jsonld-write':
    type: object
    description: 'An organization as active on commonground.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        nullable: true
      chamberOfComerce:
        description: 'The Chamber of Comerce ID of this organisations.'
        type: string
        nullable: true
      name:
        description: 'The name of this organization.'
        type: string
      description:
        description: 'The description of this organisation.'
        type: string
        nullable: true
      technicalContact:
        description: 'The technicalContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      privacyContact:
        description: 'The privacyContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      administrationContact:
        description: 'The administrationContact of this application'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      style:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/StyleGatewayWrc:jsonld-write'
      contact:
        description: 'The contact information for this organization'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
        nullable: true
      parentOrganization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      termsAndConditions:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-write'
      privacyPolicy:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-write'
    required:
      - name
  ResourceCategory-read:
    type: object
    description: 'An resource atachhed to one or more categoires.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      resource:
        description: 'The common ground resource bound to groups'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
      categories:
        type: array
        items:
          $ref: '#/components/schemas/Category-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
  ResourceCategory-write:
    type: object
    description: 'An resource atachhed to one or more categoires.'
    properties:
      resource:
        description: 'The common ground resource bound to groups'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
      categories:
        type: array
        items:
          $ref: '#/components/schemas/Category-write'
  'ResourceCategory:jsonld-read':
    type: object
    description: 'An resource atachhed to one or more categoires.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      resource:
        description: 'The common ground resource bound to groups'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
      categories:
        type: array
        items:
          $ref: '#/components/schemas/CategoryGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
  'ResourceCategory:jsonld-write':
    type: object
    description: 'An resource atachhed to one or more categoires.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      resource:
        description: 'The common ground resource bound to groups'
        externalDocs:
          url: 'http://schema.org/url'
        type: string
      categories:
        type: array
        items:
          $ref: '#/components/schemas/CategoryGatewayWrc:jsonld-write'
  Slug-read:
    type: object
    description: 'Your slug connects your application with your pages.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this slug.'
        type: string
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Application-read'
      template:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Template-read'
      slug:
        description: 'The actual slug of this slug without a pre / e.g. about not about'
        type: string
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - slug
  Slug-write:
    type: object
    description: 'Your slug connects your application with your pages.'
    required:
      - name
      - slug
    properties:
      name:
        description: 'The internal name of this slug.'
        type: string
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Application-write'
      template:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Template-write'
      slug:
        description: 'The actual slug of this slug without a pre / e.g. about not about'
        type: string
  'Slug:jsonld-read':
    type: object
    description: 'Your slug connects your application with your pages.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this slug.'
        type: string
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-read'
      template:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-read'
      slug:
        description: 'The actual slug of this slug without a pre / e.g. about not about'
        type: string
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - slug
  'Slug:jsonld-write':
    type: object
    description: 'Your slug connects your application with your pages.'
    required:
      - name
      - slug
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The internal name of this slug.'
        type: string
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-write'
      template:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-write'
      slug:
        description: 'The actual slug of this slug without a pre / e.g. about not about'
        type: string
  Style-read:
    type: object
    description: 'Your style provides ccs and a favicon for an organisation.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this style.'
        type: string
      description:
        description: 'The description of this style.'
        type: string
      css:
        description: 'the css body of this style'
        type: string
      favicon:
        $ref: '#/components/schemas/Image-read'
      organizations:
        type: array
        items:
          $ref: '#/components/schemas/Organization-read'
      applications:
        type: array
        items:
          $ref: '#/components/schemas/Application-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - description
  Style-write:
    type: object
    description: 'Your style provides ccs and a favicon for an organisation.'
    required:
      - name
      - description
    properties:
      name:
        description: 'The name of this style.'
        type: string
      description:
        description: 'The description of this style.'
        type: string
      css:
        description: 'the css body of this style'
        type: string
      favicon:
        $ref: '#/components/schemas/Image-write'
      organizations:
        type: array
        items:
          $ref: '#/components/schemas/Organization-write'
      applications:
        type: array
        items:
          $ref: '#/components/schemas/Application-write'
  'Style:jsonld-read':
    type: object
    description: 'Your style provides ccs and a favicon for an organisation.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The name of this style.'
        type: string
      description:
        description: 'The description of this style.'
        type: string
      css:
        description: 'the css body of this style'
        type: string
      favicon:
        $ref: '#/components/schemas/ImageGatewayWrc:jsonld-read'
      organizations:
        type: array
        items:
          $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      applications:
        type: array
        items:
          $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - description
  'Style:jsonld-write':
    type: object
    description: 'Your style provides ccs and a favicon for an organisation.'
    required:
      - name
      - description
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The name of this style.'
        type: string
      description:
        description: 'The description of this style.'
        type: string
      css:
        description: 'the css body of this style'
        type: string
      favicon:
        $ref: '#/components/schemas/ImageGatewayWrc:jsonld-write'
      organizations:
        type: array
        items:
          $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      applications:
        type: array
        items:
          $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-write'
  Template-read:
    type: object
    description: 'Templates holds information your pages or include in messages.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this menu'
        type: string
      title:
        description: 'The external name of this menu'
        type: string
        nullable: true
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      content:
        description: 'The Content of this template.'
        type: string
      variables:
        description: 'Optional variables ussed during rendering'
        type: array
        items:
          type: string
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        type: string
      slugs:
        type: array
        items:
          $ref: '#/components/schemas/Slug-read'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-read'
      templateGroups:
        type: array
        items:
          $ref: '#/components/schemas/TemplateGroup-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - content
      - templateEngine
  Template-write:
    type: object
    description: 'Templates holds information your pages or include in messages.'
    required:
      - name
      - content
      - templateEngine
    properties:
      name:
        description: 'The internal name of this menu'
        type: string
      title:
        description: 'The external name of this menu'
        type: string
        nullable: true
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      createSlug:
        description: 'Whether to auto create a slug on creation of this template'
        type: boolean
      content:
        description: 'The Content of this template.'
        type: string
      variables:
        description: 'Optional variables ussed during rendering'
        type: array
        items:
          type: string
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        type: string
      slugs:
        type: array
        items:
          $ref: '#/components/schemas/Slug-write'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-write'
      templateGroups:
        type: array
        items:
          $ref: '#/components/schemas/TemplateGroup-write'
  'Template:jsonld-read':
    type: object
    description: 'Templates holds information your pages or include in messages.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this menu'
        type: string
      title:
        description: 'The external name of this menu'
        type: string
        nullable: true
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      content:
        description: 'The Content of this template.'
        type: string
      variables:
        description: 'Optional variables ussed during rendering'
        type: array
        items:
          type: string
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        type: string
      slugs:
        type: array
        items:
          $ref: '#/components/schemas/SlugGatewayWrc:jsonld-read'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      templateGroups:
        type: array
        items:
          $ref: '#/components/schemas/TemplateGroupGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
      - content
      - templateEngine
  'Template:jsonld-write':
    type: object
    description: 'Templates holds information your pages or include in messages.'
    required:
      - name
      - content
      - templateEngine
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The internal name of this menu'
        type: string
      title:
        description: 'The external name of this menu'
        type: string
        nullable: true
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      createSlug:
        description: 'Whether to auto create a slug on creation of this template'
        type: boolean
      content:
        description: 'The Content of this template.'
        type: string
      variables:
        description: 'Optional variables ussed during rendering'
        type: array
        items:
          type: string
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        type: string
      slugs:
        type: array
        items:
          $ref: '#/components/schemas/SlugGatewayWrc:jsonld-write'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
      templateGroups:
        type: array
        items:
          $ref: '#/components/schemas/TemplateGroupGatewayWrc:jsonld-write'
  TemplateGroup-read:
    type: object
    description: 'Groups are a way of orginzing templates.'
    properties:
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this menu'
        type: string
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      templates:
        type: array
        items:
          $ref: '#/components/schemas/Template-read'
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Application-read'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
  TemplateGroup-write:
    type: object
    description: 'Groups are a way of orginzing templates.'
    required:
      - name
    properties:
      name:
        description: 'The internal name of this menu'
        type: string
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      templates:
        type: array
        items:
          $ref: '#/components/schemas/Template-write'
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Application-write'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/Organization-write'
  'TemplateGroup:jsonld-read':
    type: object
    description: 'Groups are a way of orginzing templates.'
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      id:
        readOnly: true
        description: 'The UUID identifier of this resource'
        externalDocs:
          url: 'http://schema.org/identifier'
        type: string
        format: uuid
      name:
        description: 'The internal name of this menu'
        type: string
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      templates:
        type: array
        items:
          $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-read'
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-read'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-read'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        nullable: true
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        nullable: true
    required:
      - name
  'TemplateGroup:jsonld-write':
    type: object
    description: 'Groups are a way of orginzing templates.'
    required:
      - name
    properties:
      '@context':
        readOnly: true
        type: string
      '@id':
        readOnly: true
        type: string
      '@type':
        readOnly: true
        type: string
      name:
        description: 'The internal name of this menu'
        type: string
      description:
        description: 'The description of this page.'
        type: string
        nullable: true
      templates:
        type: array
        items:
          $ref: '#/components/schemas/TemplateGatewayWrc:jsonld-write'
      application:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/ApplicationGatewayWrc:jsonld-write'
      organization:
        nullable: true
        anyOf:
          -
            $ref: '#/components/schemas/OrganizationGatewayWrc:jsonld-write'
security: []
tags:
  -
    name: GatewayWrcCategory
    description: |+
      An category.

  -
    name: GatewayWrcConfiguration
    description: |+
      Configurations hold a specific organisation configruation for an application.

  -
    name: GatewayWrcOrganization
    description: |+
      An organization as active on commonground.

  -
    name: GatewayWrcTemplate
    description: |+
      Templates holds information your pages or include in messages.

  -
    name: GatewayWrcMenuItem
    description: |+
      MenuItem is a part of a menu and can be a link or submenu.

  -
    name: GatewayWrcTemplateGroup
    description: |+
      Groups are a way of orginzing templates.

  -
    name: GatewayWrcApplication
    description: |+
      Application is the project of a website.

  -
    name: GatewayWrcSlug
    description: |+
      Your slug connects your application with your pages.

  -
    name: GatewayWrcStyle
    description: |+
      Your style provides ccs and a favicon for an organisation.

  -
    name: GatewayWrcDocument
    description: |+
      Documents hold a document encoded in base64.

  -
    name: GatewayWrcMenu
    description: |+
      Menu is your way of navigation inside your application.

  -
    name: GatewayWrcImage
    description: |+
      Image speaks for itself.

  -
    name: GatewayWrcResourceCategory
    description: |+
      An resource atachhed to one or more categoires.

  -
    name: GatewayWrcChangeLog
    description: |-
      An resource representing a log line.

      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: GatewayWrcAuditTrail
    description: |-
      An resource representing a log line.

      This entity represents a product that can be ordered via the OrderRegistratieComponent.