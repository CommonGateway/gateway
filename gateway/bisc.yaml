App\Entity\Gateway:
    edu_api:
        name: educatie component
        auth: apikey
        apikey: 8b55691f-346d-423c-bdcf-3f5365806d39
        location: https://taalhuizen-bisc.commonground.nu/api/v1/edu
        documentation: https://raw.githubusercontent.com/ConductionNL/education-component/master/api/public/schema/openapi.yaml
    contacten_api:
        name: contacten component
        auth: apikey
        apikey: 8b55691f-346d-423c-bdcf-3f5365806d39
        location: https://taalhuizen-bisc.commonground.nu/api/v1/cc
        documentation: https://raw.githubusercontent.com/ConductionNL/contactcatalogus/master/api/public/schema/openapi.yaml
    mrc_api:
        name: medewerker catalogus
        auth: apikey
        apikey: 8b55691f-346d-423c-bdcf-3f5365806d39
        location: https://taalhuizen-bisc.commonground.nu/api/v1/mrc
        documentation: https://raw.githubusercontent.com/ConductionNL/medewerkercatalogus/master/api/public/schema/openapi.yaml
    memo_api:
        name: memo component
        auth: apikey
        apikey: 8b55691f-346d-423c-bdcf-3f5365806d39
        location: https://taalhuizen-bisc.commonground.nu/api/v1/memo
        documentation: https://raw.githubusercontent.com/ConductionNL/memo-component/master/api/public/schema/openapi.yaml
    uc_api:
        name: user component
        auth: apikey
        apikey: 8b55691f-346d-423c-bdcf-3f5365806d39
        location: https://taalhuizen-bisc.commonground.nu/api/v2/uc
        documentation: https://raw.githubusercontent.com/ConductionNL/user-component/master/api/public/schema/openapi.yaml
    wrc_api:
        name: webresource catalogus
        auth: apikey
        apikey: 8b55691f-346d-423c-bdcf-3f5365806d39
        location: https://taalhuizen-bisc.commonground.nu/api/v1/wrc
        documentation: https://raw.githubusercontent.com/ConductionNL/webresourcecatalogus/master/api/public/schema/openapi.yaml

App\Entity\Entity:
    # User object
    user:
        route: '/api/users'
        name: users
        description: Dit endpoint behandeld alle functionaliteit rondom users of gebruikers.
        gateway: '@uc_api'
        endpoint: 'users'
        extend: false
        availableProperties:
            - username
            - roles
            - userGroups
            - locale
            - person
        usedProperties:
            - username
            - password
            - organization
            - roles
            - userGroups
            - emailValidated
            - locale
            - person

    # UserGroup (security) object
    usergroup:
        route: '/api/user_groups'
        name: user_groups
        description: Dit endpoint behandeld alle functionaliteit rondom groepen van gebruikers. Zo kan je met deze groepen onderscheid wat een gebruiker wel mag en de andere niet.
        gateway: '@uc_api'
        endpoint: 'groups'
        extend: false
        availableProperties:
            - organization
            - name
            - description
            - code
#            - scopes
#            - users

    # Organization Object
    organization:
        route: '/api/organizations'
        name: organizations
        description: Dit endpoint behandeld alle functionaliteit rondom organisaties. Binnen TOP hebben organisaties een belangrijke rol, taalhuizen en aanbieders zijn bijvoorbeeld organisaties.
        gateway: '@contacten_api'
        endpoint: 'organizations'
        extend: false
        # (if usedProperties is set) availableProperties could just be : [], would do the same as current list, because all of these attributes are persistToGateway = true
        # availableProperties = properties we want to get from external object (what we want to show in post/put responses)
        availableProperties:
            - name
            - type
            - telephones
            - addresses
            - emails
            - parentOrganization
        # usedProperties could be totally removed here, this would allow all properties to be used, and that equals this list below.
        # usedProperties = properties we want to be able to post, put and get (what we allow to be post/put and what we want to show in get responses)
        usedProperties:
            - name
            - type
            - telephones
            - addresses
            - emails
            - parentOrganization

    #Email Object
    email:
        name: email
        description: Dit object beschrijft een email-adres welke gekoppeld kan worden aan een persoon of organisatie.
        gateway: '@contacten_api'
        endpoint: 'emails'
        availableProperties:
            - name
            - email

    #Telefoon Object
    telephone:
        name: telephone
        description: Dit object beschrijft een telefoonnummer welke gekoppeld kan worden aan een persoon of organisatie.
        gateway: '@contacten_api'
        endpoint: 'telephones'
        availableProperties:
            - name
            - telephone

    #Address Object
    address:
        name: address
        description: Dit object beschrijft een adres welke gekoppeld kan worden aan een persoon of organisatie.
        gateway: '@contacten_api'
        endpoint: 'addresses'
        availableProperties:
            - name
            - street
            - houseNumber
            - houseNumberSuffix
            - postalCode
            - locality
            - country

    # Person Object
    person:
        name: persons
        description: Dit object beschrijft een persoon en alleen eigenschappen die specifiek bij een persoon horen.
        gateway: '@contacten_api'
        endpoint: 'people'
        extend: false
        availableProperties:
            - givenName
            - additionalName
            - familyName
            - birthday
            - primaryLanguage
            - birthplace
            - gender
            - speakingLanguages
            - maritalStatus
            - addresses
            - telephones
            - emails
            - contactPreference
            # These: are only stored in the gateway, not external. Example, this could be removed
#            - contactPreferenceOther
#            - availability
#            - availabilityNotes
#            - children
#            - country
#            - user

    # Employee Object
    employee:
        route: '/api/employees'
        name: employees
        description: Dit object beschrijft een medewerker en alleen eigenschappen die specifiek bij een medewerker horen.
        gateway: '@mrc_api'
        endpoint: 'employees'
        extend: false
        availableProperties: []

    #Student Object
    student:
        route: '/api/students'
        name: students
        description: Dit object beschrijft een student en alleen eigenschappen die specifiek bij een student horen. Binnen taalhuizen wordt student ook wel deelnemer genoemd.
        gateway: '@edu_api'
        endpoint: 'participants'
        extend: false
        availableProperties:
            - status

    # Medewerker Intake object
    employeeIntake:
        name: employee_intake
        description: Bij een nieuwe medewerker wordt een intake gedaan om te kijken waar de medewerker best beste ingezet kan worden

    # Student Intake object
    studentIntake:
        name: student_intake
        description: Bij een nieuwe student of deelnemer wordt een intake gedaan om te kijken wat zijn taalniveau is en wat hij of zij wil leren

    # Civic Integration  object
    civicIntegration:
        name: civicIntegration
        description: In dit object slaan we informatie op ten opzichten van de inburgering

    # Education object
    education:
        name: education
        description: Het educatie object maakt het mogelijk alle vormen van leertrajecten die een persoon zou kunnen volgen te beschrijven en behandelen. Een leertraject zou een volledige MBO studie kunnen zijn maar ook een cursus.

    # LearningNeed object
    learningNeed:
        route: '/api/learning_needs'
        name: LearningNeed
        description: Het learningNeed object beschrijft de leerbehoefte van de student.

    # LearningResult object
    learningResult:
        route: '/api/learning_results'
        name: LearningResult
        description: Het learningResult object beschrijft de leerresultaten van de student.

    # course object
    program:
        name: program
        description: Een opleiding zo als aangeboden door een taalhuis

    # course object
    course:
        name: course
        description: Een curus of vak zo als aangeboden door een taalhuis,

    # courseGroup object
    courseGroup:
        name: courseGroup
        description: Een groep van deelnemers aan een curus of opleiding (bijvoorbeeld een klas)

    # participation object
    participation:
        route: '/api/participations'
        name: participation
        description:
            
    # participation object
    contactMoment:
        route: '/api/contact_moments'
        name: contactMoment
        description:

App\Entity\Attribute:

    # User attributes
    user_username:
        name: username
        description: Usualy an email address.
        type: string
        maxLength: 255
        required: true
        entity: '@user'
        mustBeUnique: true
        persistToGateway: true
    user_password: #temporarry this should be send by mail
        name: password
        description: Keep this peronal
        type: string
        maxLength: 255
        required: true
        entity: '@user'
        persistToGateway: true
    #TODO:
#    user_???:
#        name: password
#        description: Keep this peronal
#        type: string
#        maxLength: 255
#        required: true
#        entity: '@user'
#        persistToGateway: true
    user_locale:
        name: locale
        description: Location setting for the user.
        type: string
        maxLength: 255
        required: true
        defaultValue: nl-NL
        entity: '@user'
        persistToGateway: true
    user_organization:
        name: organization
        description: To which organization does the user belong?
        type: object
        required: true
        persistToGateway: true
        cascade: false
        entity: '@user'
        object: '@organization'
    user_usergroups:
        name: userGroups
        description: In what usergroups does the user resides.
        type: object
#        type: string
        multiple: true
        required: true
        entity: '@user'
        object: '@usergroup'
        persistToGateway: true
        cascade: false
    user_person:
        name: person
        description: The person of this user.
        type: object
#        required: true #TODO: should be true, but this might cause problems? example: cascade employee->person->user has required user->person?
        entity: '@user'
        object: '@person'
        cascade: true
        inversedBy: '@person_user'

#     UserGroup (security) properties
    userGroup_organization:
        name: organization
        description: To which organization does this usergroup belong?
        type: object
        required: true
        entity: '@usergroup'
        object: '@organization'
        persistToGateway: true
        cascade: false
    userGroup_name:
        name: name
        description: What is the name of this usergroup?
        type: string
        maxLength: 255
        required: true
        entity: '@usergroup'
        persistToGateway: true
    userGroup_description:
        name: description
        description: What is the function of this usergroup? To which parts of the application does it give access?
        type: string
        maxLength: 2550
        required: true
        entity: '@usergroup'
        persistToGateway: true
    userGroup_code:
        name: code
        description: What is the code of this usergroup?
        type: string
        maxLength: 255
        required: true
        entity: '@usergroup'
        persistToGateway: true

    # Organization properties
    organization_name:
        name: name
        description: What is the name of the organization.
        type: string
        maxLength: 255
        mustBeUnique: true
        entity: '@organization'
        persistToGateway: true
        searchable: true
    organization_type:
        name: type
        description: To be able to differentiat between organizations we need to know what kind of organization they are. The type attribute descirbes what kind of organization this is.
        type: string
        required: true
        enum: ['taalhuis', 'bisc', 'verwijzer','aanbieder']
        entity: '@organization'
        persistToGateway: true
        searchable: true
    organization_parentOrganization:
        name: parentOrganization
        description: The larger organization that this organization is a subOrganization of.
        type: object
        required: true
        entity: '@organization'
        object: '@organization'
        persistToGateway: true
        searchable: true
        defaultValue: 'a0dc8cdc-c637-46b9-be8d-9103edc1e951' # BISC organization uuid
        cascade: false
    organization_address:
        name: addresses
        description: Where is the organization located?
        type: object
        multiple: true
        entity: '@organization'
        object: '@address'
        persistToGateway: true
        cascade: true
    organization_telephone:
        name: telephones
        description: The telephone number of the organization.
        type: object
        multiple: true
        entity: '@organization'
        object: '@telephone'
        persistToGateway: true
        cascade: true
    organization_email:
        name: emails
        description: The email address of the organization.
        type: object
        multiple: true
        mustBeUnique: true
        entity: '@organization'
        object: '@email'
        persistToGateway: true
        cascade: true

    # Email
    email_name:
        name: name
        type: string
        maxLength: 255
        entity: '@email'
        persistToGateway: true
    email_email:
        name: email
        type: string
        maxLength: 255
        required: true
        format: email
        mustBeUnique: true
        entity: '@email'
        persistToGateway: true

    #Telephone
    telephone_name:
        name: name
        type: string
        maxLength: 255
        entity: '@telephone'
        persistToGateway: true
    telephone_telephone:
        name: telephone
        type: string
        maxLength: 255
        required: true
        format: phone
        entity: '@telephone'
        persistToGateway: true

    # Address
    address_name:
        name: name
        type: string
        maxLength: 255
        entity: '@address'
        persistToGateway: true
    address_street:
        name: street
        type: string
        maxLength: 255
        required: true
        entity: '@address'
        persistToGateway: true
    address_houseNumber:
        name: houseNumber
        type: string
        maxLength: 255
        required: true
        entity: '@address'
        persistToGateway: true
    address_houseNumberSuffix:
        name: houseNumberSuffix
        type: string
        maxLength: 255
        entity: '@address'
        persistToGateway: true
    address_postalCode:
        name: postalCode
        type: string
        maxLength: 255
        required: true
        persistToGateway: true
        entity: '@address'
    address_locality:
        name: locality
        type: string
        maxLength: 255
        required: true
        entity: '@address'
        persistToGateway: true
    address_country:
        name: country
        type: string
        format: countryCode
        maxLength: 255
        entity: '@address'
        persistToGateway: true

    # Person Properties
    person_givenName:
        name: givenName
        type: string
        maxLength: 255
        required: true;
        entity: '@person'
        persistToGateway: true
    person_additionalName:
        name: additionalName
        type: string
        maxLength: 255
        entity: '@person'
        persistToGateway: true
    person_familyName:
        name: familyName
        type: string
        maxLength: 255
        entity: '@person'
        required: true
        persistToGateway: true
    person_birthday:
        name: birthday
        type: date
        entity: '@person'
        persistToGateway: true
    person_birthplace:
        name: birthplace
        type: string
        format: countryCode
        entity: '@person'
        maxLength: 255
        persistToGateway: false
    person_country:
        name: country
        type: string
        format: countryCode
        maxLength: 255
        entity: '@person'
        persistToGateway: true
    person_gender:
        name: gender
        type: string
        enum: ['Male', 'Female', 'X']
        entity: '@person'
        persistToGateway: true
    person_maritalStatus:
        name: maritalStatus
        type: string
        enum: ['MARRIED_PARTNER', 'SINGLE', 'DIVORCED','WIDOW']
        entity: '@person'
        persistToGateway: true
    person_primaryLanguage:
        name: primaryLanguage
        type: string
#        format: countryCode #TODO: do we want this here? (Lifely just wants a string¿)
        maxLength: 255
        entity: '@person'
        persistToGateway: true
    person_speakingLanguages:
        name: speakingLanguages
        type: string
        maxLength: 255
        entity: '@person'
        persistToGateway: false
    person_contactPreference:
        name: contactPreference
        type: string
        enum: ['PHONECALL', 'WHATSAPP', 'EMAIL', 'OTHER']
        entity: '@person'
    person_contactPreferenceOther:
        name: contactPreferenceOther
        type: string
        maxLength: 255
        entity: '@person'
        requiredIf:
            contactPreference: OTHER
    person_availability:
        name: availability
        type: string
        multiple: true
        enum: ['MONDAY_MORNING', 'MONDAY_AFTERNOON', 'MONDAY_EVENING', 'TUESDAY_MORNING', 'TUESDAY_AFTERNOON', 'TUESDAY_EVENING', 'WEDNESDAY_MORNING', 'WEDNESDAY_AFTERNOON', 'WEDNESDAY_EVENING', 'THURSDAY_MORNING', 'THURSDAY_AFTERNOON', 'THURSDAY_EVENING', 'FRIDAY_MORNING', 'FRIDAY_AFTERNOON', 'FRIDAY_EVENING', 'SATURDAY_MORNING', 'SATURDAY_AFTERNOON', 'SATURDAY_EVENING', 'SUNDAY_MORNING', 'SUNDAY_AFTERNOON', 'SUNDAY_EVENING']
        entity: '@person'
    person_availabilityNotes:
        name: availabilityNotes
        type: string
        maxLength: 255
        entity: '@person'
    person_children:
        name: children
        type: integer
        entity: '@person'
    person_address:
        name: addresses
        type: object
        multiple: true
        entity: '@person'
        object: '@address'
        cascade: true
    person_telephone:
        name: telephones
        type: object
        multiple: true
        entity: '@person'
        object: '@telephone'
        cascade: true
    person_email:
        name: emails
        type: object
        mustBeUnique: true
        multiple: true
        entity: '@person'
        object: '@email'
        cascade: true
    person_user:
        name: user
        type: object
        entity: '@person'
        object: '@user'
        cascade: true
        inversedBy: '@user_person'

    # Employee  Properties
    employee_person:
        name: person
        type: object
        entity: '@employee'
        object: '@person'
        required: true
        cascade: true
        persistToGateway: true
    employee_organization:
        name: languageHouse
        type: object
        entity: '@employee'
        object: '@organization'
        cascade: false
    employee_intake:
        name: intake
        type: object
        entity: '@employee'
        object: '@employeeIntake'
        cascade: true
    employee_education:
        name: educations
        type: object
        multiple: true
        entity: '@employee'
        object: '@education'
        cascade: true
        persistToGateway: false

    # student properties
    student_person:
        name: person
        type: object
        entity: '@student'
        object: '@person'
        required: true
        cascade: true
        persistToGateway: true
    student_civicIntegration:
        name: civicIntegration
        type: object
        entity: '@student'
        object: '@civicIntegration'
        required: false
        cascade: true
    student_languageHouse:
        name: languageHouse
        type: object
        entity: '@student'
        object: '@organization'
        required: true
        cascade: false
    student_intake:
        name: intake
        type: object
        entity: '@student'
        object: '@studentIntake'
        cascade: true
    student_education:
        name: educations
        type: object
        multiple: true
        entity: '@student'
        object: '@education'
        cascade: true
    student_participations:
        name: participations
        type: object
        multiple: true
        entity: '@student'
        object: '@participation'
        cascade: true
    student_learningNeeds:
        name: learningNeeds
        type: object
        multiple: true
        entity: '@student'
        object: '@learningNeed'
        cascade: true

        # Employee Intake properties
    employeeIntake_targetGroupPreferences:
        name: targetGroupPreferences
        type: string
        multiple: true
        enum: ['NT1', 'NT2']
        entity: '@employeeIntake'
    employeeIntake_volunteeringPreference:
        name: volunteeringPreference
        type: string
        maxLength: 255
        entity: '@employeeIntake'
    employeeIntake_gotHereVia:
        name: gotHereVia
        type: string
        maxLength: 255
        entity: '@employeeIntake'
    employeeIntake_hasExperienceWithTargetGroup:
        name: hasExperienceWithTargetGroup
        type: boolean
        entity: '@employeeIntake'
    employeeIntake_experienceWithTargetGroupYesReason:
        name: experienceWithTargetGroupYesReason
        type: string
        entity: '@employeeIntake'
        requiredIf:
            hasExperienceWithTargetGroup: true
    employeeIntake_currentEducation:
        name: currentEducation
        type: string
        enum: ['YES', 'NO', 'NO_BUT_DID_EARLIER']
        entity: '@employeeIntake'
    employeeIntake_otherRelevantCertificates:
        name: otherRelevantCertificates
        type: string
        maxLength: 255
        entity: '@employeeIntake'
    employeeIntake_isVOGChecked:
        name: isVOGChecked
        type: boolean
        entity: '@employeeIntake'


    # Student Intake properties
    studentIntake_date:
        name: date
        type: datetime
        entity: '@studentIntake'
    studentIntake_status:
        name: status
        type: string
        enum: ['REFERRED', 'ACTIVE', 'COMPLETED']
        defaultValue: 'REFERRED'
        entity: '@studentIntake'
        searchable: true
    studentIntake_referringOrganization:
        name: referringOrganization
        type: string
        enum: [ 'UWV', 'SOCIAL_SERVICE', 'LIBRARY', 'WELFARE_WORK',  'NEIGHBORHOOD_TEAM', 'VOLUNTEER_ORGANIZATION', 'LANGUAGE_PROVIDER', 'OTHER']
        entity: '@studentIntake'
    studentIntake_referringOrganizationOther:
        name: referringOrganizationOther
        type: string
        maxLength: 255
        entity: '@studentIntake'
        requiredIf:
            referringOrganization: OTHER
    studentIntake_referringOrganizationEmail:
        name: referringOrganizationEmail
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_foundVia:
        name: foundVia
        type: string
        enum: ['VOLUNTEER_CENTER', 'LIBRARY_WEBSITE', 'SOCIAL_MEDIA', 'NEWSPAPER', 'VIA_VIA', 'OTHER']
        entity: '@studentIntake'
    studentIntake_foundViaOther:
        name: foundViaOther
        type: string
        maxLength: 255
        entity: '@studentIntake'
        requiredIf:
            foundVia: OTHER
    studentIntake_wentToLanguageHouseBefore:
        name: wentToLanguageHouseBefore
        type: boolean
        entity: '@studentIntake'
    studentIntake_wentToLanguageHouseBeforeReason:
        name: wentToLanguageHouseBeforeReason
        type: string
        maxLength: 255
        entity: '@studentIntake'
        requiredIf:
            wentToLanguageHouseBefore: true
    studentIntake_wentToLanguageHouseBeforeYear:
        name: wentToLanguageHouseBeforeYear
        type: integer # taalhuizen-service is the type float
        maxLength: 255
        entity: '@studentIntake'
        requiredIf:
            wentToLanguageHouseBefore: true
    studentIntake_network:
        name: network
        type: string
        # select multiple
        enum: ['HOUSEHOLD_MEMBERS', 'NEIGHBORS', 'FAMILY_MEMBERS', 'AID_WORKERS', 'FRIENDS_ACQUAINTANCES', 'PEOPLE_AT_MOSQUE_CHURCH', 'ACQUAINTANCES_SPEAKING_OWN_LANGUAGE', 'ACQUAINTANCES_SPEAKING_DUTCH']
        multiple: true
        entity: '@studentIntake'
    studentIntake_participationLadder:
        name: participationLadder
        type: string
        # type in taalhuis service is integer
        # select single
        enum: ['1 geïsoleerd', '2 sociale contacten buiten huis', '3 deelname georganiseerde activiteiten', '4 vrijwilligers werk/maatschappelijke activering', '5 betaald werk met ondersteuning', '6 betaald werk']
        entity: '@studentIntake'
    # dutchNTDetails
    studentIntake_dutchNTLevel:
        name: dutchNTLevel
        type: string
        enum: ['NT1', 'NT2']
        entity: '@studentIntake'
    studentIntake_inNetherlandsSinceYear:
        name: inNetherlandsSinceYear
        type: integer #DateTime?
        entity: '@studentIntake'
    studentIntake_languageInDailyLife:
        name: languageInDailyLife
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_knowsLatinAlphabet:
        name: knowsLatinAlphabet
        type: boolean
        entity: '@studentIntake'
    studentIntake_lastKnownLevel:
        name: lastKnownLevel
        type: string
        enum: ['A0', 'A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'UNKNOWN']
        entity: '@studentIntake'
    studentIntake_trainedForJob:
        name: trainedForJob
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_lastJob:
        name: lastJob
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_dayTimeActivities:
        name: dayTimeActivities
        type: string
        enum: ['SEARCHING_FOR_JOB', 'RE_INTEGRATION', 'SCHOOL', 'VOLUNTEER_JOB', 'JOB', 'OTHER' ]
        multiple: true #select multiple
        entity: '@studentIntake'
    studentIntake_dayTimeActivitiesOther:
        name: dayTimeActivitiesOther
        type: string
        maxLength: 255
        entity: '@studentIntake'
        requiredIf:
            dayTimeActivities: OTHER
    # motivationDetails
    studentIntake_desiredSkills:
        name: desiredSkills
        type: string
        #select multiple
        enum: [ 'KLIKTIK', 'USING_WHATSAPP', 'USING_SKYPE', 'DEVICE_FUNCTIONALITIES', 'DIGITAL_GOVERNMENT', 'RESERVE_BOOKS_IN_LIBRARY', 'ADS_ON_MARKTPLAATS',  'READ_FOR_CHILDREN', 'UNDERSTAND_PRESCRIPTIONS', 'WRITE_APPLICATION_LETTER', 'WRITE_POSTCARD_FOR_FAMILY', 'DO_ADMINISTRATION', 'CALCULATIONS_FOR_RECIPES', 'OTHER']
        multiple: true
        entity: '@studentIntake'
    studentIntake_desiredSkillsOther:
        name: desiredSkillsOther
        type: string
        maxLength: 255
        entity: '@studentIntake'
        requiredIf:
            desiredSkills: OTHER
    studentIntake_hasTriedThisBefore:
        name: hasTriedThisBefore
        type: boolean
        entity: '@studentIntake'
    studentIntake_hasTriedThisBeforeExplanation:
        name: hasTriedThisBeforeExplanation
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_whyWantTheseskills:
        name: whyWantTheseskills
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_whyWantThisNow:
        name: whyWantThisNow
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_desiredLearningMethod:
        name: desiredLearningMethod
        type: string
        #select multiple
        enum: ['IN_A_GROUP', 'ONE_ON_ONE', 'HOME_ENVIRONMENT', 'IN_LIBRARY_OR_OTHER', 'ONLINE']
        multiple: true
        entity: '@studentIntake'
    studentIntake_remarks:
        name: remarks
        type: string
        maxLength: 255
        entity: '@studentIntake'
    studentIntake_speakingLevel:
        name: speakingLevel
        type: string
        enum: ['BEGINNER', 'REASONABLE', 'ADVANCED']
        entity: '@studentIntake'
    studentIntake_readingTestResult:
        name: readingTestResult
        type: string
        enum: ['CAN_NOT_READ', 'A0', 'A1', 'A2', 'B1', 'B2', 'C1', 'C2']
        entity: '@studentIntake'
    studentIntake_writingTestResult:
        name: writingTestResult
        type: string
        enum: ['CAN_NOT_WRITE', 'WRITE_NAW_DETAILS', 'WRITE_SIMPLE_TEXTS', 'WRITE_SIMPLE_LETTERS']
        entity: '@studentIntake'
    studentIntake_didSignPermissionForm:
        name: didSignPermissionForm
        type: boolean
        entity: '@studentIntake'
        required: true
    studentIntake_hasPermissionToShareDataWithProviders:
        name: hasPermissionToShareDataWithProviders
        type: boolean
        entity: '@studentIntake'
        required: true
    studentIntake_hasPermissionToShareDataWithLibraries:
        name: hasPermissionToShareDataWithLibraries
        type: boolean
        entity: '@studentIntake'
        required: true
    studentIntake_hasPermissionToSendInformationAboutLibraries:
        name: hasPermissionToSendInformationAboutLibraries
        type: boolean
        entity: '@studentIntake'
        required: true


    # Education properties
    education_name:
        name: name
        type: string
        maxLength: 255
        entity: '@education'
        required: true
    education_description:
        name: description
        type: string
        maxLength: 255
        entity: '@education'
    education_type:
        name: type
        type: string
        required: true
        enum: ['EDUCATION', 'COURSE']
        entity: '@education'
    education_level:
        name: level
        type: string
        enum: ['basisonderwijs', 'vmbo havo of vwo-onderbouw of mbo-1', 'havo vwo of mbo (overig)', 'hbo of wo bachelor', 'hbo of wo master of doctor']
        entity: '@education'
    education_institution:
        name: institution
        type: string
        maxLength: 255
        entity: '@education'
    education_teacherType:
        name: teachertype
        type: string
        enum: ['PROFESSIONAL', 'VOLUNTEER', 'BOTH']
        entity: '@education'
# TODO: ?
#        requiredIf:
#            type: COURSE
    education_group:
        name: group
        type: string
        enum: ['INDIVIDUALLY', 'GROUP']
        entity: '@education'
# TODO: ?
#        requiredIf:
#            type: COURSE
    education_startDate:
        name: startDate
        type: datetime
        entity: '@education'
# TODO: ?
#        requiredIf:
#            type: EDUCATION
    education_endDate:
        name: endDate
        type: datetime
        entity: '@education'
# TODO: ?
#        requiredIf:
#            type: EDUCATION
    education_hours:
        name: hours
        type: integer
        description: The total amount of hours this education or course takes
        entity: '@education'
# TODO: ?
#        requiredIf:
#            type: COURSE
    education_degree:
        name: degree
        type: boolean
        description: Whether tis eduction or course grants a degree or diploma
        entity: '@education'
# TODO: DegreeGranted can only be true if endDate is in the past!
    education_degreeGranted:
        name: degreeGranted
        description: Whether or not a degree or diploma has been granted from this eduction or course to the student
        type: boolean
        entity: '@education'

    # Civic Integration properties
    civicIntegration_requirement:
        name: requirement
        type: string
        enum: ['YES', 'NO', 'CURRENTLY_WORKING_ON_INTEGRATION']
        entity: '@civicIntegration'
    civicIntegration_reason:
        name: reason
        type: string
        enum: ['FINISHED', 'FROM_EU_COUNTRY', 'EXEMPTED_OR_ZROUTE']
        entity: '@civicIntegration'
        requiredIf:
            requirement: NO
    civicIntegration_finishDate:
        name: finishDate
        type: datetime
        entity: '@civicIntegration'
        requiredIf:
            requirement: CURRENTLY_WORKING_ON_INTEGRATION


    # LearningNeed properties
    learningNeed_description:
        name: description
        type: string
        required: true
        maxLength: 255
        entity: '@learningNeed'
    learningNeed_motivation:
        name: motivation
        type: string
        required: true
        maxLength: 255
        entity: '@learningNeed'
    learningNeed_desiredOffer:
        name: desiredOffer
        type: string
        required: true
        maxLength: 255
        entity: '@learningNeed'
    learningNeed_advisedOffer:
        name: advisedOffer
        type: string
        required: true
        maxLength: 255
        entity: '@learningNeed'
    learningNeed_offerDifference:
        name: offerDifference
        type: string
        required: true
        enum: ['NO', 'YES_NOT_OFFERED_IN_TRAVEL_RANGE', 'YES_QUEUE', 'YES_OTHER']
        entity: '@learningNeed'
    learningNeed_offerDifferenceOther:
        name: offerDifferenceOther
        type: string
        entity: '@learningNeed'
        requiredIf:
            offerDifference: 'YES_OTHER'
    learningNeed_agreements:
        name: agreements
        type: string
        maxLength: 255
        entity: '@learningNeed'    
    learningNeed_learningResults:
        name: learningResults
        type: object
        required: false
        multiple: true
        entity: '@learningNeed'
        object: '@learningResult'
        cascade: true
        inversedBy: '@learningResult_learningNeed'

    # LearningResult properties
    learningResult_verb:
        name: verb
        type: string
        maxLength: 255
        required: true
        entity: '@learningResult'
    learningResult_subject:
        name: subject
        type: string
        required: true
        enum: ['DUTCH_READ','DUTCH_WRITE','MATHEMATICS_NUMBERS','MATHEMATICS_PROPORTIONS','MATHEMATICS_MEASUREMENT_AND_GEOMETRY','THEMATICS_RELATIONS','DIGITAL_SKILLS_USING_ICT_SYSTEMS','DIGITAL_SKILLS_LOOKING_FOR_INFORMATION','DIGITAL_SKILLS_PROCESSING_AND_PRESENTING_INFORMATION','DIGITAL_SKILLS_COMMUNICATION','KNOWLEDGE','SKILLS','ATTITUDE','BEHAVIOUR', 'OTHER']
        entity: '@learningResult'
    learningResult_subjectOther:
        name: subjectOther
        type: string
        maxLength: 255
        entity: '@learningResult'
        requiredIf:
            subject: 'OTHER'
    learningResult_application:
        name: application
        type: string
        required: true  
        enum: ['FAMILY AND UPBRINGING', 'LABOR_MARKET_AND_WORK','HEALTH_AND_WELLBEING','LIVING_AND_NEIGHBORHOOD','SELF-SUSTAINABILITY', 'OTHER']
        entity: '@learningResult'
    learningResult_applicationOther:
        name: applicationOther
        type: string
        maxLength: 255
        entity: '@learningResult'
        requiredIf:
            application: 'OTHER'
    learningResult_level:
        name: level
        type: string
        required: true
        enum: ['INFLUX', 'NLQF_1','NLQF_2','NLQF_3','NLQF_4', 'OTHER']
        entity: '@learningResult'        
    learningResult_levelOther:
        name: levelOther
        type: string
        maxLength: 255
        entity: '@learningResult'
        requiredIf:
            level: 'OTHER'
    learningResult_test:
        name: test
        type: string
        maxLength: 255
        entity: '@learningResult'
    learningResult_testDate:
        name: testDate
        type: date
        entity: '@learningResult'
    learningResult_explanation:
        name: explanation
        type: string
        maxLength: 2500
        entity: '@learningResult'
    learningResult_learningNeed:
        name: learningNeed
        type: object
        required: true
        entity: '@learningResult'
        object: '@learningNeed'
            
    # course properties
    course_name:
        name: name
        type: string
        maxLength: 255
        required: true
        entity: '@course'
    course_type:
        name: type
        type: string
        required: true
        enum: ['LANGUAGE','MATHEMATICS','DIGITAL_SKILLS','OTHER']
        entity: '@course'
    course_formality:
        name: formality
        type: string
        required: true
        enum: ['FORMAL','INFORMAL']
        entity: '@course'
    course_hours:
        name: hours
        type: integer
        required: true
        entity: '@course'
    course_degree:
        name: degree
        type: boolean
        required: true
        entity: '@course'
    course_start:
        name: start
        type: date
        entity: '@course'
    course_end:
        name: end
        type: date
        entity: '@course'
    course_availability:
        name: availability
        type: string
        multiple: true
        enum: ['MONDAY_MORNING', 'MONDAY_AFTERNOON', 'MONDAY_EVENING', 'TUESDAY_MORNING', 'TUESDAY_AFTERNOON', 'TUESDAY_EVENING', 'WEDNESDAY_MORNING', 'WEDNESDAY_AFTERNOON', 'WEDNESDAY_EVENING', 'THURSDAY_MORNING', 'THURSDAY_AFTERNOON', 'THURSDAY_EVENING', 'FRIDAY_MORNING', 'FRIDAY_AFTERNOON', 'FRIDAY_EVENING', 'SATURDAY_MORNING', 'SATURDAY_AFTERNOON', 'SATURDAY_EVENING', 'SUNDAY_MORNING', 'SUNDAY_AFTERNOON', 'SUNDAY_EVENING']
        entity: '@course'        
    course_description:
        name: description
        type: string
        maxLength: 2550
        entity: '@course'
    course_notes:
        name: notes
        type: string
        maxLength: 2550
        entity: '@course'
    course_location:
        name: location
        type: string
        maxLength: 255
        entity: '@course'
    course_minParticipants:
        name: minParticipants
        type: integer
        entity: '@course'
    course_maxParticipants:
        name: maxParticipants
        type: integer
        entity: '@course'
    course_evaluations:
        name: evaluationsparticipation_offerType
        type: string
        maxLength: 255
        entity: '@course'
    course_organization:
        name: organization
        type: object
        entity: '@course'
        object: '@organization'
        cascade: false
    # participation properties
    participation_course:
        name: provider
        type: object
        entity: '@participation'
        object: '@course'
        cascade: false
    participation_providerOther:
        name: providerOther
        type: string
        maxLength: 255
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_explanation:
        name: explanation
        type: string
        maxLength: 2555
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_startParticipation:
        name: startParticipation
        type: date
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_endParticipation:
        name: endParticipation
        type: date
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_reasonEndParticipation:
        name: reasonEndParticipation
        type: string
        enum: ['MOVED','WORK','ILLNESS+HEALTH','DECEASED','COMPLETED_SUCCESSFULLY','FAMILY_CIRCUMSTANCES','DOES_NOT_MEET_PARTICIPANT_EXPECTATIONS','OTHER']
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_offerName:
        name: offerName
        type: string
        maxLength: 255
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_offerType:
        name: offerType
        type: string
        enum: ['LANGUAGE','MATHEMATICS','DIGITAL_SKILLS','OTHER']
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_formality:
        name: formality
        type: string
        enum: ['FORMAL','INFORMAL']
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_groupType:
        name: participation_groupType
        type: string
        enum: ['OTHER']
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_degree:
        name: degree
        type: boolean
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_start:
        name: start
        type: date
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_end:
        name: end
        type: date
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_agreement:
        name: agreement
        type: string
        maxLength: 2550
        entity: '@participation'
        requiredIf:
            provider: 'OTHER'
    participation_learningResult:
        name: learningResult
        type: object
        required: true
        multiple: true
        entity: '@participation'
        object: '@learningResult'
        cascade: true

    # Contact Moment
    contactMoment_employee:
        name: employee
        type: object
        required: true
        entity: '@contactMoment'
        object: '@employee'
        cascade: false
    contactMoment_student:
        name: student
        type: object
        required: true
        entity: '@contactMoment'
        object: '@student'
        cascade: false
    contactMoment_type:
        name: type
        type: string
        required: true
        enum: ['REMARK','INFORMATION-FOR-STORYTELLING','INTAKE','FOLLOW-UP_TALK','FINAL_TALK']
        entity: '@contactMoment'
    contactMoment_date:
        name: date
        type: date
        required: true
        entity: '@contactMoment'
    contactMoment_explanation:
        name: explanation
        type: string
        maxLength: 2500
        required: true
        entity: '@contactMoment'

# Basic setup for bisc

