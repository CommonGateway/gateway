# Parameters for endpoint regex
parameters:
    weerItemRegex: "#^(weer/[^/]*)$#"
    weekendItemRegex: "#^(weer/[^/]*)$#"

App\Entity\Endpoint:
    weerEndpointGet:
        name: Weer endpoint get collection
        description: endpoint voor dingen rondom weer
        path: ['weer']
        pathRegex: "#^(weer)$#"
        operationType: collection

    weerEndpointGetItem: 
        name: Weer endpoint get item
        description: endpoint voor dingen rondom weer
        path: ['weer', '{id}']
        pathRegex: <{weerItemRegex}>
        operationType: item

    weerEndpointPost:
        name: Weer endpoint post
        description: endpoint voor dingen rondom weer
        path: ['weer']
        pathRegex: "#^(weer)$#"
        operationType: collection

    weerEndpointPut:
        name: Weer endpoint put
        description: endpoint voor dingen rondom weer
        path: ['weer', '{id}']
        pathRegex: <{weerItemRegex}>
        operationType: item
        
    weerEndpointDelete:
        name: Weer endpoint delete
        description: endpoint voor dingen rondom weer
        path: ['weer', '{id}']
        pathRegex: <{weerItemRegex}>
        operationType: item

    weekendEndpointGet:
        name: Weekend GET collection
        description: endpoint voor weekend
        path: ['weekend']
        pathRegex: "#^(weekend)$#"
        operationType: collection

    weekendEndpointGetItem:
        name: Weekend GET item
        description: endpoint voor dingen rondom weer
        path: ['weekend', '{id}']
        pathRegex: <{weekendItemRegex}>
        operationType: item

    # peopleEndpoint:
    #     name: People endpoint
    #     description: endpoint voor dingen rondom contactgegevens
    #     path: people

    # emailEndpoint:
    #     name: Email endpoint
    #     description: endpoint voor dingen rondom emails
    #     path: emails

App\Entity\Entity:
    weekWeather:
        route: "/api/weer"
        name: weer
        description: Dit entity behandeld weer.

    weekendEntity:
        name: weekend
        description: Dit entity behandeld weekend.

    # todo: This does not work with bisc.yaml or default.yaml
    # person:
    #     route: "/api/people"
    #     name: persons
    #     description: Dit endpoint behandeld contactgegevens.
    #     endpoint: "people"

    # email:
    #     route: "/api/emails"
    #     name: email
    #     description: Dit endpoint behandeld emails.
    #     endpoint: "emails"

App\Entity\Attribute:
    # weekWeather Attributes
    weekWeather_monday:
        name: monday
        description: Weather of this day.
        type: string
        maxLength: 255
#        required: true
        entity: "@weekWeather"
        nullable: true
    weekWeather_tuesday:
        name: tuesday
        description: Weather of this day.
        type: string
        maxLength: 255
        required: true
        entity: "@weekWeather"
    weekWeather_wednesday:
        name: wednesday
        description: Weather of this day.
        type: string
        maxLength: 255
        required: true
        entity: "@weekWeather"
    weekWeather_thursday:
        name: thursday
        description: Weather of this day.
        type: string
        maxLength: 255
        required: true
        entity: "@weekWeather"
    weekWeather_friday:
        name: friday
        description: Weather of this day.
        type: string
        maxLength: 255
        required: true
        entity: "@weekWeather"

    weekWeather_weekend:
        name: weekend
        description: Weekend of this weer.
        type: object
        cascade: true
        object: "@weekendEntity"
        entity: "@weekWeather"

    weekend_saturday:
        name: saturday
        description: Saturday of this weekend.
        type: string
        maxLength: 255
        entity: "@weekendEntity"

    weekend_sunday:
        name: sunday
        description: Sunday of this weekend.
        type: string
        maxLength: 255
        entity: "@weekendEntity"



    # weekWeather_saturday:
    #     name: saturday
    #     description: Weather of this day.
    #     type: string
    #     maxLength: 255
    #     required: true
    #     entity: "@weekWeather"
    # weekWeather_sunday:
    #     name: sunday
    #     description: Weather of this day.
    #     type: string
    #     maxLength: 255
    #     required: true
    #     entity: "@weekWeather"

    # person Attributes
#     person_givenName:
#         name: givenName
#         type: string
#         maxLength: 255
#         required: true;
#         entity: "@person"
#     person_additionalName:
#         name: additionalName
#         type: string
#         maxLength: 255
#         entity: "@person"
#         enum: ["de", "het", "van", "von", "van de", "van der", "van het", "den", "ter", "te", "ten"]
#         nullable: true
#     person_familyName:
#         name: familyName
#         type: string
#         maxLength: 255
#         entity: "@person"
#         required: true
#     person_email:
#         name: emails
#         type: object
#         uniqueItems: true
#         multiple: true
#         entity: "@person"
#         object: "@email"
#         cascade: true
# #        cascadeDelete: true #todo:
#     person_birthday:
#         name: birthday
#         type: date
#         uniqueItems: true
#         multiple: true
#         nullable: true
#         minDate: "2022-02-10"
#         entity: "@person"
#     person_file:
#         name: file
#         type: file
# #        multiple: true #todo, test it
#         minFileSize: 20
#         maxFileSize: 50000
#         fileTypes: # see function mimeToExt() in ValidationService #todo:
#             [
#                 "application/pdf",
#                 "text/plain",
#                 "text/xml",
#                 "text/json",
#                 "text/x-comma-separated-values",
#                 "text/comma-separated-values",
#                 "application/vnd.msexcel",
#                 "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
#                 "video/mp4",
#                 "audio/mp3",
#                 "image/png",
#                 "image/x-png",
#                 "image/jpeg",
#                 "image/pjpeg",
#             ]
#         entity: "@person"
#     person_int:
#         name: int
#         minimum: 3
#         exclusiveMinimum: true
#         maximum: 12
#         type: integer
#         entity: "@person"
#     person_postalCode:
#         name: code
#         type: integer
#         requiredIf:
#             '==': [{ var: int }, 12]
#         forbiddenIf:
#             '<': [{ var: int }, 12]
#         entity: "@person"
#         format: dutch_pc4
#     person_immutable:
#         name: immutable
#         type: string
#         entity: '@person'
#         immutable: true
#     person_unsetable:
#         name: unsetable
#         type: string
#         entity: '@person'
#         unsetable: true

    # email Attributes
#     email_name:
#         name: name
#         type: string
#         minLength: 5
#         maxLength: 255
#         entity: "@email"
#     email_email:
#         name: email
#         type: string
#         maxLength: 255
#         required: true
#         format: email
# #        mustBeUnique: true #todo:
#         entity: "@email"

App\Entity\Handler:
    weatherHandler:
        name: Weather handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        mappingIn:
            monday: maandag
            tuesday: dinsdag
            wednesday: woensdag
            thursday: donderdag
            friday: vrijdag
            saturday: weekend.zaterdag
            sunday: weekend.zondag
        translationsIn: ["weatherTable1"]
        translationsOut: ["weatherTable2"]
        mappingOut:
            montag: monday
            dienstag: tuesday
            mittwoch: wednesday
            donnerstag: thursday 
            freitag: friday 
            wochenende.samstag: saturday
            wochenende.sonntag: sunday
        endpoints: ["@weerEndpointGet", "@weerEndpointGetItem", "@weerEndpointPost", "@weerEndpointPut"]
        entity: "@weekWeather"
        # Denormalizer throws error trying denormalize template (set with api call for now)
        # template: "<html><body><h1>Test</h1></body></html>"
        # templateType: twig

        
    weekendHandler:
        name: Weather handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@weekendEndpointGet", "@weekendEndpointGetItem"]
        entity: "@weekendEntity"

    # peopleHandler:
    #     name: People handler
    #     methods: ["*"]
    #     sequence: 0
    #     conditions: "{}"
    #     endpoint: "@peopleEndpoint"
    #     entity: "@person"

    # emailHandler:
    #     name: Email handler
    #     methods: ["*"]
    #     sequence: 0
    #     conditions: "{}"
    #     endpoint: "@emailEndpoint"
    #     entity: "@email"

App\Entity\Translation:
    regenTranslation:
        translationTable: weatherTable1
        translateFrom: zonnig
        translateTo: regen
        language: nl
    rainTranslation:
        translationTable: weatherTable2
        translateFrom: regen
        translateTo: sturm
        language: de

App\Entity\Subscriber:
    weerSubscriber:
        name: Weer subscriber 
        runOrder: 0
        conditions: "{}" 
        method: POST
        headers: 
            accept: application/json
        queryParameters: 
            param: value
        mappingIn:
            monday: maandag
            tuesday: dinsdag
            wednesday: woensdag
            thursday: donderdag
            friday: vrijdag
            saturday: weekend.zaterdag
            sunday: weekend.zondag
        translationsIn: ["weatherTable1"]
        translationsOut: ["weatherTable2"]
        mappingOut:
            montag: monday
            dienstag: tuesday
            mittwoch: wednesday
            donnerstag: thursday 
            freitag: friday 
            wochenende.samstag: saturday
            wochenende.sonntag: sunday
        endpoint: "@weerEndpointPost"

# App\Entity\CollectionEntity:
#     zakenapiCollection:
#         name: Zaken collection 
#         sourceType: github
#         locationOAS: https://raw.githubusercontent.com/VNG-Realisatie/zaken-api/master/src/openapi.yaml 


