## Collections
#App\Entity\CollectionEntity:
#    contactCatalogusCollection:
#        name: ContactCatalogus collection
#        sourceType: github
#        locationOAS: https://raw.githubusercontent.com/ConductionNL/contactcatalogus/master/api/public/schema/openapi.yaml

# Entities
App\Entity\Entity:
    # Organization Entity
    organization:
        function: "organization"
        route: "/api/organizations"
        name: organization
        description: Entity Organisation exists of an id, a name, a description, a kvk number, one or more telephones, one or more addresses, one or more emails and one or more persons.

    # Person Entity
    person:
        function: "person"
        route: "/api/people"
        name: person
        description: Entity Person exists of an id, a givenName, a additionalName, a familyName, one or more telephones, one or more addresses, one or more emails and one or more organisations.

    #Email Entity
    email:
        route: "/api/emails"
        name: email
        description: Entity Email exists of an id, a name, an email, one or more people and one or more organisations.

    #Telefoon Entity
    telephone:
        route: "/api/telephones"
        name: telephone
        description: Entity Telephone exists of an id, a name and a telephone, one or more people and one or more organisations.

    #Address Entity
    address:
        route: "/api/addresses"
        name: address
        description: Entity Address exists of an id, a name, a bagnummeraanduiding, a street, a houseNumber, a houseNumberSufix, a postalCode, a region, a locality and country, one or more people and one or more organisations.


# Attributes
App\Entity\Attribute:
    # Organization Attributes
    organization_name:
        name: name
        description: The name of this organization.
        type: string
        required: true
        maxLength: 255
        entity: "@organization"
        searchable: true
    organization_description:
        name: description
        description: The description of this organization.
        type: string
        maxLength: 255
        entity: "@organization"
    organization_coc:
        name: coc
        description: The Chamber Of Comerce number of this organization.
        type: string
        maxLength: 15
        entity: "@organization"
    organization_vatID:
        name: vatID
        description: Value added tax id of this organisation (btw)
        type: string
        maxLength: 15
        entity: "@organization"
    organization_type:
        name: type
        description: To be able to differentiat between organizations we need to know what kind of organization they are. The type attribute descirbes what kind of organization this is.
        type: string
        required: true
        entity: "@organization"
        searchable: true
    organization_parentOrganization:
        name: parentOrganization
        description: The larger organization that this organization is a subOrganization of.
        type: object
        entity: "@organization"
        object: "@organization"
        cascade: true
        searchable: true
#        immutable: true # todo BISC
        inversedBy: "@organization_subOrganizations"
    organization_subOrganizations:
        name: subOrganizations
        description: The sub-organizations of which this organization is the parent organization.
        type: object
        entity: "@organization"
        object: "@organization"
        cascade: true
        inversedBy: "@organization_parentOrganization"
    organization_addresses:
        name: addresses
        description: Where is the organization located?
        type: object
        multiple: true
        entity: "@organization"
        object: "@address"
        cascade: true
        cascadeDelete: true
    organization_telephone:
        name: telephones
        description: The telephone number of this organization.
        type: object
        multiple: true
        entity: "@organization"
        object: "@telephone"
        cascade: true
        cascadeDelete: true
    organization_email:
        name: emails
        description: The email address of this organization.
        type: object
        multiple: true
        entity: "@organization"
        object: "@email"
        cascade: true
        cascadeDelete: true
    organization_people:
        name: people
        description: The people of this organization.
        type: object
        multiple: true
        entity: "@organization"
        object: "@person"
        cascade: true
        inversedBy: "@person_organization"

    # Person Attributes
    person_name:
        name: name
        description: The full name of a person consisting of given and fammily name
        type: string
#        readOnly: true # todo ???
        entity: "@person"
    person_formalName:
        name: formalName
        description: The full name of a person consisting of fammily and given name
        type: string
#        readOnly: true # todo ???
        entity: "@person"
    person_givenName:
        name: givenName
        description: Given name of this person
        type: string
        maxLength: 255
        required: true;
        entity: "@person"
    person_additionalName:
        name: additionalName
        description: Additional name of this person
        type: string
        maxLength: 255
        entity: "@person"
    person_familyName:
        name: familyName
        description: Family name of this person
        type: string
        maxLength: 255
        entity: "@person"
        required: true
    person_birthday:
        name: birthday
        description: Date of birth of this person
        type: date
        entity: "@person"
    person_taxID:
        name: taxID
        description: TIN, CIF, NIF or BSN
        type: string
        maxLength: 255
        entity: "@person"
    person_aboutMe:
        name: aboutMe
        description: Information about this person
        type: string
        maxLength: 255
        entity: "@person"
    person_birthplace:
        name: birthplace
        description: Birthplace of this person (an Address)
        type: object
        entity: "@person"
        object: "@address"
        cascade: true
        cascadeDelete: true
    person_gender:
        name: gender
        description: The gender of this person. **Male**, **Female**, **X**
        type: string
        enum: ["Male", "Female", "X"]
        entity: "@person"
    person_maritalStatus:
        name: maritalStatus
        description: The marital status of this person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**
        type: string
        enum: ["MARRIED_PARTNER", "SINGLE", "DIVORCED", "WIDOW"]
        entity: "@person"
    person_primaryLanguage:
        name: primaryLanguage
        description: The primary language of this person.
        type: string
        maxLength: 255
        entity: "@person"
    person_speakingLanguages:
        name: speakingLanguages
        description: The speaking languages of this person.
        type: string
        maxLength: 255
        entity: "@person"
    person_contactPreference:
        name: contactPreference
        description: The contact preference of this person.
        type: string
        entity: "@person"
    person_personalPhoto:
        name: personalPhoto
        description: A photo of this person (base64 file)
        type: file
        fileTypes: 
            [
                "image/png",
                "image/x-png",
                "image/jpeg",
                "image/pjpeg",
                "image/svg+xml"
            ]
        entity: "@person"
    person_emails:
        name: emails
        description: emails of this person
        type: object
        mustBeUnique: true
        multiple: true
        entity: "@person"
        object: "@email"
        cascade: true
        cascadeDelete: true
    person_telephones:
        name: telephones
        description: telephones of this person
        type: object
        multiple: true
        entity: "@person"
        object: "@telephone"
        cascade: true
        cascadeDelete: true
    person_addresses:
        name: addresses
        description: addresses of this person
        type: object
        multiple: true
        entity: "@person"
        object: "@address"
        cascade: true
        cascadeDelete: true
    person_organization:
        name: addresses
        description: organization of this person
        type: object
        entity: "@person"
        object: "@organization"
        inversedBy: "@organization_people"

    # Email Attributes
    email_name:
        name: name
        type: string
        maxLength: 255
        entity: "@email"
    email_email:
        name: email
        type: string
        maxLength: 255
        required: true
        format: email
        mustBeUnique: true
        entity: "@email"

    #Telephone Attributes
    telephone_name:
        name: name
        type: string
        maxLength: 255
        entity: "@telephone"
    telephone_telephone:
        name: telephone
        type: string
        maxLength: 255
        required: true
        format: phone
        entity: "@telephone"

    # Address Attributes
    address_name:
        name: name
        type: string
        maxLength: 255
        entity: "@address"
    address_street:
        name: street
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_houseNumber:
        name: houseNumber
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_houseNumberSuffix:
        name: houseNumberSuffix
        type: string
        maxLength: 255
        entity: "@address"
    address_postalCode:
        name: postalCode
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_locality:
        name: locality
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_country:
        name: country
        type: string
        format: countryCode
        maxLength: 255
        entity: "@address"


# Endpoints        
App\Entity\Endpoint:
    # Organization Endpoints
    organizationEndpointGet:
        name: Organization endpoint get collection
        description: endpoint for organizations
        path: ['organizations']
        pathRegex: "organizations"
        operationType: collection

    organizationEndpointPost:
        name: Organization endpoint post
        description: endpoint for organizations
        path: ['organizations']
        pathRegex: "organizations"
        operationType: collection

    organizationEndpointGetItem:
        name: Organization endpoint get item
        description: endpoint for organizations
        path: ['organizations', '{id}']
#        pathRegex: "#^(organizations/[^/]*)$#"
        operationType: item

    organizationEndpointPut:
        name: Organization endpoint put
        description: endpoint for organizations
        path: ['organizations', '{id}']
#        pathRegex: "#^(organizations/[^/]*)$#"
        operationType: item

    organizationEndpointDelete:
        name: Organization endpoint delete
        description: endpoint for organizations
        path: ['organizations', '{id}']
#        pathRegex: "#^(organizations/[^/]*)$#"
        operationType: item

    # Person Endpoints
    personEndpointGet:
        name: Person endpoint get collection
        description: endpoint for people
        path: [ 'people' ]
        pathRegex: "people"
        operationType: collection

    personEndpointPost:
        name: Person endpoint post
        description: endpoint for people
        path: [ 'people' ]
        pathRegex: "people"
        operationType: collection

    personEndpointGetItem:
        name: Person endpoint get item
        description: endpoint for people
        path: [ 'people', '{id}' ]
#        pathRegex: "#^(people/[^/]*)$#"
        operationType: item

    personEndpointPut:
        name: Person endpoint put
        description: endpoint for people
        path: [ 'people', '{id}' ]
#        pathRegex: "#^(people/[^/]*)$#"
        operationType: item

    personEndpointDelete:
        name: Person endpoint delete
        description: endpoint for people
        path: [ 'people', '{id}' ]
#        pathRegex: "#^(people/[^/]*)$#"
        operationType: item

    # Email Endpoints
    emailEndpointGet:
        name: Email endpoint get collection
        description: endpoint for emails
        path: [ 'emails' ]
        pathRegex: "emails"
        operationType: collection

    emailEndpointPost:
        name: Email endpoint post
        description: endpoint for emails
        path: [ 'emails' ]
        pathRegex: "emails"
        operationType: collection

    emailEndpointGetItem:
        name: Email endpoint get item
        description: endpoint for emails
        path: [ 'emails', '{id}' ]
        #        pathRegex: "#^(emails/[^/]*)$#"
        operationType: item

    emailEndpointPut:
        name: Email endpoint put
        description: endpoint for emails
        path: [ 'emails', '{id}' ]
        #        pathRegex: "#^(emails/[^/]*)$#"
        operationType: item

    emailEndpointDelete:
        name: Email endpoint delete
        description: endpoint for emails
        path: [ 'emails', '{id}' ]
        #        pathRegex: "#^(emails/[^/]*)$#"
        operationType: item

    # Telephone Endpoints
    telephoneEndpointGet:
        name: Telephone endpoint get collection
        description: endpoint for telephones
        path: [ 'telephones' ]
        pathRegex: "telephones"
        operationType: collection

    telephoneEndpointPost:
        name: Telephone endpoint post
        description: endpoint for telephones
        path: [ 'telephones' ]
        pathRegex: "telephones"
        operationType: collection

    telephoneEndpointGetItem:
        name: Telephone endpoint get item
        description: endpoint for telephones
        path: [ 'telephones', '{id}' ]
        #        pathRegex: "#^(telephones/[^/]*)$#"
        operationType: item

    telephoneEndpointPut:
        name: Telephone endpoint put
        description: endpoint for telephones
        path: [ 'telephones', '{id}' ]
        #        pathRegex: "#^(telephones/[^/]*)$#"
        operationType: item

    telephoneEndpointDelete:
        name: Telephone endpoint delete
        description: endpoint for telephones
        path: [ 'telephones', '{id}' ]
        #        pathRegex: "#^(telephones/[^/]*)$#"
        operationType: item

    # Address Endpoints
    addressEndpointGet:
        name: Address endpoint get collection
        description: endpoint for addresses
        path: [ 'addresses' ]
        pathRegex: "addresses"
        operationType: collection

    addressEndpointPost:
        name: Address endpoint post
        description: endpoint for addresses
        path: [ 'addresses' ]
        pathRegex: "addresses"
        operationType: collection

    addressEndpointGetItem:
        name: Address endpoint get item
        description: endpoint for addresses
        path: [ 'addresses', '{id}' ]
        #        pathRegex: "#^(addresses/[^/]*)$#"
        operationType: item

    addressEndpointPut:
        name: Address endpoint put
        description: endpoint for addresses
        path: [ 'addresses', '{id}' ]
        #        pathRegex: "#^(addresses/[^/]*)$#"
        operationType: item

    addressEndpointDelete:
        name: Address endpoint delete
        description: endpoint for addresses
        path: [ 'addresses', '{id}' ]
        #        pathRegex: "#^(addresses/[^/]*)$#"
        operationType: item


# Handlers
App\Entity\Handler:
    # Organization Handler
    organizationHandler:
        name: Organization handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@organizationEndpointGet", "@organizationEndpointPost", "@organizationEndpointGetItem", "@organizationEndpointPut", "@organizationEndpointDelete"]
        entity: "@organization"

    # Person Handler
    personHandler:
        name: Person handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@personEndpointGet", "@personEndpointPost", "@personEndpointGetItem", "@personEndpointPut", "@personEndpointDelete"]
        entity: "@person"

    # Email Handler
    emailHandler:
        name: Email handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@emailEndpointGet", "@emailEndpointPost", "@emailEndpointGetItem", "@emailEndpointPut", "@emailEndpointDelete"]
        entity: "@email"

    # Telephone Handler
    telephoneHandler:
        name: Telephone handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@telephoneEndpointGet", "@telephoneEndpointPost", "@telephoneEndpointGetItem", "@telephoneEndpointPut", "@telephoneEndpointDelete"]
        entity: "@telephone"

    # Address Handler
    addressHandler:
        name: Address handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@addressEndpointGet", "@addressEndpointPost", "@addressEndpointGetItem", "@addressEndpointPut", "@addressEndpointDelete"]
        entity: "@address"



# todo: turn these into ObjectEntities
#App\Entity\Organization:
#    defaultOrganization:
##        id: <\Ramsey\Uuid\Uuid::fromString('a1c8e0b6-2f78-480d-a9fb-9792142f4761')>
#        id: a1c8e0b6-2f78-480d-a9fb-9792142f4761
#        name: default organization
#        description: the default organization
#        emails:
#            - '@defaultOrganization_email'
#        telephones:
#            - '@defaultOrganization_telephone'
#        addresses:
#            - '@defaultOrganization_address'
#
#App\Entity\Person:
#    defaultPerson:
##        id: <\Ramsey\Uuid\Uuid::fromString('d2a24edf-6ced-40a2-8e7c-56803f4ce3f5')>
#        id: d2a24edf-6ced-40a2-8e7c-56803f4ce3f5
#        givenName: John
#        additionalName: Allen
#        familyName: Doe
#        emails:
#            - '@defaultPerson_email'
#        telephones:
#            - '@defaultPerson_telephone'
#        addresses:
#            - '@defaultPerson_address'
#        
#App\Entity\Email:
#    defaultOrganization_email:
#        name: email for default organization
#        email: default-organization@test.com
#        
#    defaultPerson_email:
#        name: email for default person
#        email: default-person@test.com
#
#App\Entity\Address:
#    defaultOrganization_address:
#        name: address for default organization
#        street: somestreet
#        houseNumber: 42
#        postalCode: 6996
#        locality: Utrecht
#        
#    defaultPerson_address:
#        name: address for default person
#        street: someotherstreet
#        houseNumber: 666
#        postalCode: 1234
#        locality: Amsterdam
#
#App\Entity\Telephone:
#    defaultOrganization_telephone:
#        name: telephone for default organization
#        telephone: 0612345678
#    
#    defaultPerson_telephone:
#        name: telephone for default person
#        telephone: 0687654321
